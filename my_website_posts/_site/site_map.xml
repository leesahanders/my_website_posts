<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Lisa Anders - questionable.quarto</title>
<link>https://questionable.quarto.pub/posts/site_map.html</link>
<atom:link href="https://questionable.quarto.pub/posts/site_map.xml" rel="self" type="application/rss+xml"/>
<description>Making the most out of data</description>
<generator>quarto-1.4.550</generator>
<lastBuildDate>Sat, 05 Jul 2025 06:00:00 GMT</lastBuildDate>
<item>
  <title>Using LLM’s to make a text adventure</title>
  <dc:creator>Lisa </dc:creator>
  <link>https://questionable.quarto.pub/posts/posts/text-adventure-space.html</link>
  <description><![CDATA[ 





<section id="project-nightfall-game" class="level2">
<h2 class="anchored" data-anchor-id="project-nightfall-game">Project Nightfall Game</h2>
<!---{{< include files/bus-jump.html >}}-->
<iframe src="files/text-adventure-space.html" width="100%" height="1000px" <!--="" adjust="" as="" needed="" --="">
    frameborder="0"
    scrolling="no"
    allowfullscreen
></iframe>
</section>
<section id="background" class="level2">
<h2 class="anchored" data-anchor-id="background">Background</h2>
<p>Various prompts and refinement: `</p>
<pre><code>Make a text based game that can be accessed from a phone as an application using only open source software. The game should include a puzzle that the player needs to solve and some horror and science fiction themeing. The game should be set in the early days of the space program with the user playing the role of a spy exploring files from the members of the Soviet Russia's space program. The player should have a limited set of files they can access at first. When the player accesses a file it should give the a clue for the next file to access. Not all files should give clues, and some clues will need to be combined across multiple files. The game should have a dramatic ending.

It's too hard to access files. Each file should be accessed with "access &lt;file ID&gt;" but the file ID should be very simple, less than 5 characters

Add a way for the player to see which files they have viewed, which files they haven't viewed, and which files have remaining clues that they haven't acted on (haven't viewed the file that that file has a clue for)

Can you move the text submission field above the list of available files, and sort the available files in descending order

Instead of "access" can the command be "read"

After the player has "read" a file the content of the file should be included below in the "available files" list as a collapsible field. By default it should be collapsed, but should be able to be expanded if the player clicks on it

The content of the message isn't showing up under available files in the expandable field. Please make sure that after the file has been read for the first time the content shows up under the available fields list in an expandable field.

Change the solution to the final puzzle to "The abyss virus is in me" making the reveal as dramatic as possible. Keep as much of the original content as possible.</code></pre>


</section>

 ]]></description>
  <category>code</category>
  <category>games</category>
  <guid>https://questionable.quarto.pub/posts/posts/text-adventure-space.html</guid>
  <pubDate>Sat, 05 Jul 2025 06:00:00 GMT</pubDate>
  <media:content url="https://questionable.quarto.pub/posts/posts/img/text-adventure-space.png" medium="image" type="image/png" height="118" width="144"/>
</item>
<item>
  <title>Using LLM’s to make a jump game</title>
  <dc:creator>Lisa </dc:creator>
  <link>https://questionable.quarto.pub/posts/posts/bus-jump.html</link>
  <description><![CDATA[ 





<section id="denver-rtd-magic-bus-jump" class="level2">
<h2 class="anchored" data-anchor-id="denver-rtd-magic-bus-jump">Denver RTD Magic Bus Jump</h2>
<!---{{< include files/bus-jump.html >}}-->
<iframe src="files/bus-jump.html" width="100%" height="500px" <!--="" adjust="" as="" needed="" --="">
    frameborder="0"
    scrolling="no"
    allowfullscreen
></iframe>
</section>
<section id="background" class="level2">
<h2 class="anchored" data-anchor-id="background">Background</h2>
<p>I wanted to play around with making a mini game, using LLM’s to help make the code using react and html.</p>


</section>

 ]]></description>
  <category>code</category>
  <category>games</category>
  <guid>https://questionable.quarto.pub/posts/posts/bus-jump.html</guid>
  <pubDate>Sat, 05 Jul 2025 06:00:00 GMT</pubDate>
  <media:content url="https://questionable.quarto.pub/posts/posts/img/bus-jump.png" medium="image" type="image/png" height="97" width="144"/>
</item>
<item>
  <title>Using LLM’s to make a dice roller</title>
  <dc:creator>Lisa </dc:creator>
  <link>https://questionable.quarto.pub/posts/posts/dice-roller.html</link>
  <description><![CDATA[ 





<section id="the-dice-roller" class="level2">
<h2 class="anchored" data-anchor-id="the-dice-roller">The Dice Roller</h2>
&lt;!DOCTYPE html&gt;


<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>
Universal Dice Roller
</title>
<!-- Tailwind CSS CDN -->
<script src="https://cdn.tailwindcss.com"></script>
<!-- Google Fonts - Inter -->
<link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&amp;display=swap" rel="stylesheet">
<style>
        /* Custom CSS for the spinning animation */
        @keyframes spin-fast {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
        .animate-spin-fast {
            animation: spin-fast 0.3s linear infinite;
        }
        body {
            font-family: 'Inter', sans-serif;
        }
    </style>


<div id="root">

</div>
<!-- React and ReactDOM CDNs -->
<script crossorigin="" src="https://unpkg.com/react@18/umd/react.production.min.js"></script>
<script crossorigin="" src="https://unpkg.com/react-dom@18/umd/react-dom.production.min.js"></script>
<!-- Babel CDN for JSX transformation -->
<script src="https://unpkg.com/@babel/standalone/babel.min.js"></script>
<script type="text/babel">
        // Main App component for the dice roller application
        const App = () => {
            // Define available dice types and their maximum values
            const diceTypes = [
                { type: 'd4', max: 4 },
                { type: 'd6', max: 6 },
                { type: 'd8', max: 8 },
                { type: 'd12', max: 12 },
                { type: 'd20', max: 20 },
                { type: 'd100', max: 100 },
            ];

            // State for the currently selected dice type (default to d6)
            const [selectedDiceType, setSelectedDiceType] = React.useState(diceTypes[1]); // d6 is at index 1
            // State to store the current value of the dice
            const [diceValue, setDiceValue] = React.useState(1);
            // State to control the rolling animation
            const [isRolling, setIsRolling] = React.useState(false);
            // State to store the LLM-generated dice insight
            const [diceInsight, setDiceInsight] = React.useState('');
            // State to control the loading indicator for the LLM insight
            const [isLoadingInsight, setIsLoadingInsight] = React.useState(false);
            // State to store any error messages from the LLM API call
            const [insightError, setInsightError] = React.useState('');

            /**
             * Renders the face of the dice. Now always shows the number.
             * @param {number} value The current dice value.
             * @param {string} type The type of dice (e.g., 'd6', 'd20').
             * @returns {JSX.Element} The JSX element representing the dice face.
             */
            const renderDiceFace = (value, type) => {
                // For all dice types, display the number directly
                return (
                    <span className="text-5xl md:text-6xl font-bold text-white drop-shadow-md">
                        {value}
                    </span>
                );
            };

            /**
             * Handles the dice rolling logic.
             * Generates a random number based on the selected dice type.
             * Includes a visual rolling animation.
             */
            const rollDice = () => {
                if (isRolling) return; // Prevent multiple rolls while already rolling

                setIsRolling(true); // Start the rolling animation
                setDiceInsight(''); // Clear previous insight
                setInsightError(''); // Clear previous error

                const animationDuration = 1500; // 1.5 seconds for the main animation

                // After the main animation duration, calculate the final value
                setTimeout(() => {
                    const finalValue = Math.floor(Math.random() * selectedDiceType.max) + 1; // Generate random number
                    setDiceValue(finalValue); // Update dice value to the final result

                    // Introduce a tiny additional delay to ensure React has a chance to update the DOM
                    // with the new diceValue BEFORE the 'isRolling' overlay is removed.
                    setTimeout(() => {
                        setIsRolling(false); // End the rolling animation, remove overlay
                    }, 50); // Small additional delay (e.g., 50ms)
                }, animationDuration);
            };

            /**
             * Calls the Gemini API to get an insight based on the dice value and type.
             */
            const getDiceInsight = async () => {
                setIsLoadingInsight(true);
                setInsightError('');
                setDiceInsight(''); // Clear previous insight

                const prompt = `Provide a very short, whimsical, and positive interpretation or fortune for a roll of ${diceValue} on a ${selectedDiceType.type} dice. Make it sound like a fun, lighthearted prediction. Keep it to one sentence.`;

                let chatHistory = [];
                chatHistory.push({ role: "user", parts: [{ text: prompt }] });
                const payload = { contents: chatHistory };
                const apiKey = ""; // Canvas will automatically provide the API key at runtime
                const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${apiKey}`;

                try {
                    const response = await fetch(apiUrl, {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify(payload)
                    });

                    if (!response.ok) {
                        const errorData = await response.json();
                        throw new Error(`API error: ${response.status} - ${errorData.error?.message || 'Unknown error'}`);
                    }

                    const result = await response.json();

                    if (result.candidates && result.candidates.length > 0 &&
                        result.candidates[0].content && result.candidates[0].content.parts &&
                        result.candidates[0].content.parts.length > 0) {
                        const text = result.candidates[0].content.parts[0].text;
                        setDiceInsight(text);
                    } else {
                        setInsightError("Could not get a valid insight from the AI. Please try again.");
                        console.error("Unexpected API response structure:", result);
                    }
                } catch (error) {
                    setInsightError(`Failed to get insight: ${error.message}`);
                    console.error("Error fetching dice insight:", error);
                } finally {
                    setIsLoadingInsight(false);
                }
            };

            // Initial roll when the component mounts or dice type changes
            React.useEffect(() => {
                rollDice();
            }, [selectedDiceType]); // Re-roll when selectedDiceType changes

            return (
                <div className="min-h-screen bg-gradient-to-br from-indigo-800 to-purple-900 flex flex-col items-center justify-center p-4 font-inter text-white">
                    <h1 className="text-4xl md:text-5xl font-bold mb-8 text-center drop-shadow-lg">
                        Universal Dice Roller
                    </h1>

                    {/* Dice Type Selection Buttons */}
                    <div className="flex flex-wrap justify-center gap-2 mb-8 max-w-full">
                        {diceTypes.map((dice) => (
                            <button
                                key={dice.type}
                                onClick={() => setSelectedDiceType(dice)}
                                className={`
                                    px-4 py-2 rounded-full font-semibold text-sm md:text-base
                                    transition-all duration-200 ease-in-out
                                    ${selectedDiceType.type === dice.type
                                        ? 'bg-emerald-500 text-white shadow-md'
                                        : 'bg-gray-700 text-gray-300 hover:bg-gray-600 hover:text-white'
                                    }
                                    focus:outline-none focus:ring-2 focus:ring-emerald-400 focus:ring-opacity-75
                                `}
                                disabled={isRolling || isLoadingInsight}
                            >
                                {dice.type.toUpperCase()}
                            </button>
                        ))}
                    </div>

                    {/* Dice Visualization Component */}
                    <div className={`
                        relative w-40 h-40 md:w-48 md:h-48 bg-red-600 rounded-2xl shadow-2xl flex items-center justify-center
                        transition-transform duration-300 ease-out
                        ${isRolling ? 'animate-spin-fast' : 'transform rotate-0'}
                    `}>
                        {/* Visual dice face is rendered only when not rolling */}
                        {!isRolling && renderDiceFace(diceValue, selectedDiceType.type)}
                        {/* Overlay for rolling effect */}
                        {isRolling && (
                            <div className="absolute inset-0 bg-gray-900 bg-opacity-50 flex items-center justify-center rounded-2xl">
                                <span className="text-3xl font-bold text-white animate-pulse">Rolling...</span>
                            </div>
                        )}
                    </div>

                    {/* Result Display Component */}
                    <div className="mt-8 text-6xl md:text-7xl font-extrabold text-white drop-shadow-lg">
                        {diceValue}
                    </div>

                    {/* Roll Button */}
                    <button
                        onClick={rollDice}
                        disabled={isRolling || isLoadingInsight} // Disable button while rolling or getting insight
                        className={`
                            mt-12 px-8 py-4 bg-blue-600 hover:bg-blue-700 text-white font-bold text-xl rounded-full shadow-lg
                            transition-all duration-300 ease-in-out transform
                            ${isRolling || isLoadingInsight ? 'opacity-70 cursor-not-allowed' : 'hover:scale-105 active:scale-95'}
                            focus:outline-none focus:ring-4 focus:ring-blue-500 focus:ring-opacity-50
                            relative overflow-hidden
                        `}
                    >
                        {isRolling ? (
                            <span className="flex items-center">
                                <svg className="animate-spin -ml-1 mr-3 h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                                    <circle className="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" strokeWidth="4"></circle>
                                    <path className="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                                </svg>
                                Rolling...
                            </span>
                        ) : (
                            `Roll ${selectedDiceType.type.toUpperCase()}`
                        )}
                        {/* Button hover effect */}
                        <span className="absolute inset-0 bg-white opacity-0 transition-opacity duration-300 rounded-full group-hover:opacity-10"></span>
                    </button>

                    {/* Gemini API Insight Button */}
                    <button
                        onClick={getDiceInsight}
                        disabled={isRolling || isLoadingInsight} // Disable while rolling or loading insight
                        className={`
                            mt-4 px-8 py-4 bg-purple-600 hover:bg-purple-700 text-white font-bold text-xl rounded-full shadow-lg
                            transition-all duration-300 ease-in-out transform
                            ${isRolling || isLoadingInsight ? 'opacity-70 cursor-not-allowed' : 'hover:scale-105 active:scale-95'}
                            focus:outline-none focus:ring-4 focus:ring-purple-500 focus:ring-opacity-50
                            relative overflow-hidden
                        `}
                    >
                        {isLoadingInsight ? (
                            <span className="flex items-center">
                                <svg className="animate-spin -ml-1 mr-3 h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                                    <circle className="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" strokeWidth="4"></circle>
                                    <path className="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                                </svg>
                                Getting Insight...
                            </span>
                        ) : (
                            '✨ Get Dice Insight ✨'
                        )}
                        <span className="absolute inset-0 bg-white opacity-0 transition-opacity duration-300 rounded-full group-hover:opacity-10"></span>
                    </button>

                    {/* Display Dice Insight or Error */}
                    {(diceInsight || insightError) && (
                        <div className="mt-8 p-6 bg-gray-800 bg-opacity-70 rounded-xl shadow-xl text-center max-w-md mx-auto">
                            {diceInsight && (
                                <p className="text-lg md:text-xl text-yellow-300 font-semibold italic">
                                    "{diceInsight}"
                                </p>
                            )}
                            {insightError && (
                                <p className="text-lg md:text-xl text-red-400 font-semibold">
                                    Error: {insightError}
                                </p>
                            )}
                        </div>
                    )}
                </div>
            );
        };

        // Render the App component into the 'root' div
        ReactDOM.createRoot(document.getElementById('root')).render(<App />);
    </script>


</section>
<section id="background" class="level2">
<h2 class="anchored" data-anchor-id="background">Background</h2>
<p>I wanted to make a simple dice roller for using when I’m on the road and want to play an RPG with a friend.</p>
<p>Started with this prompt, trying to be detailed and specific: “Reply with the instructions to make a phone application using open source software. The application should be simple and simulate rolling a d6 dice. It should have a UI component that visualizes rolling a dice and a component that displays the final number. Check that the rolls are truly random. Explain the components of the application and how a user can run them. Respond as if you were teaching a university course on app design.”</p>
<p>It told us this about the application:</p>
<blockquote class="blockquote">
<p>Hello class, and welcome to this session on app design! Today, we’re going to tackle a fundamental concept: building a simple, interactive application that simulates a d6 dice roll. This project will introduce you to core principles of front-end development, user interface design, and the importance of randomness in simulations.</p>
</blockquote>
<blockquote class="blockquote">
<p>We’ll be using React, a popular open-source JavaScript library for building user interfaces, along with standard HTML and CSS (specifically, Tailwind CSS for rapid styling). While this will be a web-based application, it’s designed to be fully responsive and can be easily accessed and used on any modern phone browser, giving it the feel of a native app without the complexities of platform-specific development.</p>
</blockquote>
<blockquote class="blockquote">
<p>Our application will have two main components:</p>
</blockquote>
<blockquote class="blockquote">
<p>The Dice Visualization Component: This will be a visual representation of a six-sided die, showing the dots corresponding to the rolled number. We’ll make it animate slightly to simulate the “roll.”</p>
</blockquote>
<blockquote class="blockquote">
<p>The Result Display Component: This will clearly show the numerical outcome of the dice roll.</p>
</blockquote>
<blockquote class="blockquote">
<p>The Roll Button: An interactive element to trigger the dice roll.</p>
</blockquote>
<blockquote class="blockquote">
<p>** Understanding the Application Components**</p>
</blockquote>
<blockquote class="blockquote">
<p>Let’s break down the key parts of this React application:</p>
</blockquote>
<blockquote class="blockquote">
<ol type="1">
<li><strong><code>App</code> Component:</strong></li>
</ol>
</blockquote>
<blockquote class="blockquote">
<pre><code>- This is the root component of our application. It's a functional component, which is the modern way to write React components.</code></pre>
</blockquote>
<blockquote class="blockquote">
<pre><code>- **State Management (`useState`):**</code></pre>
</blockquote>
<blockquote class="blockquote">
<pre><code>    - `diceValue`: This state variable holds the current number displayed on the dice. When `setDiceValue` is called, React re-renders the component to show the new number.</code></pre>
</blockquote>
<blockquote class="blockquote">
<pre><code>    - `isRolling`: This boolean state controls the visual "rolling" effect and disables the button during a roll.</code></pre>
</blockquote>
<blockquote class="blockquote">
<pre><code>- **`renderDiceDots(value)` Function:** This helper function is responsible for the visual representation of the dice. It takes the `diceValue` and returns an array of `div` elements, each representing a dot on the dice face. The positioning of these dots is precisely calculated using Tailwind's fractional positioning classes (`top-1/4`, `left-1/2`, etc.) and CSS `transform` for centering. This makes the dice look like an actual die face.</code></pre>
</blockquote>
<blockquote class="blockquote">
<pre><code>- **`rollDice()` Function:**</code></pre>
</blockquote>
<blockquote class="blockquote">
<pre><code>    - This is the core logic for our dice roll.</code></pre>
</blockquote>
<blockquote class="blockquote">
<pre><code>    - **Randomness:** `Math.random()` is used to generate a pseudo-random floating-point number between 0 (inclusive) and 1 (exclusive). We then multiply it by 6, use `Math.floor()` to get an integer between 0 and 5, and add 1 to get a number between 1 and 6. This is a standard and robust way to simulate dice rolls in JavaScript.</code></pre>
</blockquote>
<blockquote class="blockquote">
<pre><code>    - **Simulation of Rolling:** To make the roll feel more dynamic, we use `setInterval` to rapidly change the `diceValue` a few times, giving the impression of the dice tumbling. After a short period, `setTimeout` is used to set the final, truly random value and end the `isRolling` state.</code></pre>
</blockquote>
<blockquote class="blockquote">
<pre><code>    - **Preventing Multiple Rolls:** The `if (isRolling) return;` line ensures that a user cannot spam the roll button while a roll is already in progress, preventing unexpected behavior.</code></pre>
</blockquote>
<blockquote class="blockquote">
<pre><code>- **`useEffect` Hook:** This hook is used to perform side effects in functional components. Here, `useEffect(() =&gt; { rollDice(); }, []);` ensures that a dice roll happens automatically when the application first loads, providing an initial state. The empty dependency array `[]` means this effect only runs once after the initial render.</code></pre>
</blockquote>
<blockquote class="blockquote">
<pre><code>- **JSX (UI Structure):** The `return` statement contains the JSX (JavaScript XML) that defines the structure and appearance of our application.</code></pre>
</blockquote>
<blockquote class="blockquote">
<pre><code>    - **Main Container:** A `div` with `min-h-screen`, `flex` properties, and a gradient background from Tailwind CSS ensures the app fills the screen and centers its content.</code></pre>
</blockquote>
<blockquote class="blockquote">
<pre><code>    - **Dice Display:** A `div` styled as a red square with rounded corners and a shadow represents the dice. It uses `relative` positioning so the dots can be absolutely positioned within it. The `isRolling` state dynamically adds an `animate-spin-fast` class for the visual roll effect and an overlay to show "Rolling...".</code></pre>
</blockquote>
<blockquote class="blockquote">
<pre><code>    - **Result Display:** A large, bold `div` displays the numerical `diceValue`.</code></pre>
</blockquote>
<blockquote class="blockquote">
<pre><code>    - **Roll Button:** A styled button triggers the `rollDice` function. It's disabled when `isRolling` is true and includes a simple loading spinner for better user feedback.</code></pre>
</blockquote>
<blockquote class="blockquote">
<pre><code>- **Tailwind CSS:** We load Tailwind CSS via its CDN. This allows us to use utility classes directly in our JSX to style elements, making the app responsive and visually appealing without writing custom CSS files.</code></pre>
</blockquote>
<blockquote class="blockquote">
<pre><code>- **Custom CSS:** A small `&lt;style&gt;` block is included for the `animate-spin-fast` keyframe animation, as this is a custom animation not directly provided by Tailwind's default classes.</code></pre>
</blockquote>
<blockquote class="blockquote">
<p><strong>Ensuring Randomness</strong></p>
</blockquote>
<blockquote class="blockquote">
<p>The core of our randomness comes from <code>Math.random()</code>. This function generates what is known as <strong>pseudo-random numbers</strong>. This means the numbers are generated by a deterministic algorithm, but they appear random enough for most practical purposes, including this dice rolling simulation. For cryptographic security or highly sensitive scientific simulations, more robust random number generators (RNGs) might be needed, but for an everyday dice app, <code>Math.random()</code> is perfectly adequate and widely accepted. Each roll is independent of the previous one, and over many rolls, you would expect an even distribution of numbers from 1 to 6.</p>
</blockquote>
<blockquote class="blockquote">
<p><strong>How to Run the Application</strong></p>
</blockquote>
<blockquote class="blockquote">
<p>Since this is a web-based React application bundled into a single HTML file, running it is straightforward:</p>
</blockquote>
<blockquote class="blockquote">
<ol type="1">
<li><strong>Save the Code:</strong> Copy the entire code block provided above and save it as an HTML file (e.g., <code>dice_roller.html</code>). Make sure to include the <code>&lt;!DOCTYPE html&gt;</code> and <code>&lt;html&gt;</code>, <code>&lt;head&gt;</code>, <code>&lt;body&gt;</code> tags around the React app for it to be a complete HTML document.</li>
</ol>
</blockquote>
<blockquote class="blockquote">
<ol start="2" type="1">
<li><strong>Open in Browser:</strong></li>
</ol>
</blockquote>
<blockquote class="blockquote">
<pre><code>- **On Desktop:** Simply double-click the `dice_roller.html` file. It will open in your default web browser.</code></pre>
</blockquote>
<blockquote class="blockquote">
<pre><code>- **On Phone:**</code></pre>
</blockquote>
<blockquote class="blockquote">
<pre><code>    - **Method A (Local Server - Recommended for testing):** If you have Python installed, navigate to the directory where you saved `dice_roller.html` in your terminal and run `python -m http.server`. This will start a local web server (usually on `http://localhost:8000`). You can then access this URL from your phone's browser if both devices are on the same Wi-Fi network (you might need to use your computer's local IP address instead of `localhost`).</code></pre>
</blockquote>
<blockquote class="blockquote">
<pre><code>    - **Method B (Cloud Hosting):** For easier access, you could upload this `dice_roller.html` file to a simple web hosting service (like GitHub Pages, Netlify, Vercel, or even a free static site host). Once hosted, you'll get a URL that you can simply open in your phone's browser.</code></pre>
</blockquote>
<blockquote class="blockquote">
<pre><code>    - **Method C (Direct File Transfer - Less common for web apps):** You could transfer the HTML file directly to your phone's storage and open it with a file browser that supports opening HTML files in a web view. However, this method might have limitations with external CDN scripts.</code></pre>
</blockquote>
<blockquote class="blockquote">
<p>This approach allows you to create a functional and visually appealing application that runs across various devices using widely adopted open-source technologies. It’s a great starting point for understanding how modern web applications are built!</p>
</blockquote>
<blockquote class="blockquote">
<p>In the future consider Progressive Web App (PWA): Learn how to turn this web application into a PWA, allowing users to “install” it to their home screen and even use it offline.</p>
</blockquote>
<p>We then had it expand into multiple dice and fixed the issue with the dots not matching the number by having it only show the number: “Now add the ability to switch between dice typea: d4, d6, d8, D12, d20, and d100. The number rolled and the number on the dice don’t match. They should match. Please make it so that all dice roll numbers, not dots. Add a readme that provides: instructions for how to run it, troubleshooting tips, overall architecture, and recommended next steps.”</p>


</section>

 ]]></description>
  <category>code</category>
  <category>dice</category>
  <category>games</category>
  <guid>https://questionable.quarto.pub/posts/posts/dice-roller.html</guid>
  <pubDate>Sat, 05 Jul 2025 06:00:00 GMT</pubDate>
  <media:content url="https://questionable.quarto.pub/posts/posts/img/dice-roller.png" medium="image" type="image/png" height="162" width="144"/>
</item>
<item>
  <title>Hey Google - make me coffee!</title>
  <dc:creator>Lisa </dc:creator>
  <link>https://questionable.quarto.pub/posts/posts/kettle automation.html</link>
  <description><![CDATA[ 





<p>I bought a smart kettle (<a href="https://us.govee.com/products/goveelife-smart-electric-kettle-lite">goveelife-smart-electric-kettle-lite</a>) with the dream of being able to press a button from bed in order to have hot water available for my coffee first thing in the morning.</p>
<p>While this was great, it relies on bluetooth for the app to work. Normally I keep bluetooth off on my phone (<a href="https://www.armis.com/research/blueborne/">it’s safer that way, plus a longer battery!</a>)</p>
<p>So I automated it!</p>
<section id="steps" class="level3">
<h3 class="anchored" data-anchor-id="steps">Steps</h3>
<p>These steps were followed with my Android</p>
<p>Step 1: Install and configure the Govee app to be connected to your water kettle</p>
<p>Step 2: Install and configure Google Home and integrate with the Govee App. Assign your kettle to the kitchen (or wherever, you do you boo). Optional: Install and configure Google Assistant, for the voice activation.</p>
<p>Step 3: Create a Google Home Routine</p>
<ul>
<li>This is a personal routine, so we have more options (like being able to adjust phone settings if needed).</li>
<li>Starters: You can have this trigger for different things, like having it be voice activated when you say “hey google, make coffee!”, or when an alarm is dismissed, or at a specific time, etc.</li>
<li>Actions: Adjust home device, turn on the smart kettle (somehow by activating this way, I didn’t need to turn on bluetooth! Which is great, that’s the whole step I wanted to skip)</li>
</ul>
<p>Step 4: Test that the routine works</p>
<p>Step 5: Add the routine as an icon to the phone screen (since voice activation isn’t my jam). Long click on the routine you’ve created and then click on the icon with the arrow over the phone to create a widget and place wherever you want on your phone screen.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="img/home-automation-widget.png" class="lightbox" data-glightbox="description: .lightbox-desc-1" data-gallery="quarto-lightbox-gallery-1" title="Creating a widget"><img src="https://questionable.quarto.pub/posts/posts/img/home-automation-widget.png" class="img-fluid figure-img" alt="Creating a widget"></a></p>
<figcaption>Creating a widget</figcaption>
</figure>
</div>
<p>Step 6: Enjoy :-)</p>
</section>
<section id="what-would-i-do-differently-next-time" class="level3">
<h3 class="anchored" data-anchor-id="what-would-i-do-differently-next-time">What would I do differently next time?</h3>
<p>There are some cool button options that look they have integration, or even a vibration sensor:</p>
<ul>
<li><a href="https://us.govee.com/products/goveelife-smart-mini-double-button-switch?variantId=43252505313465">Smart button</a></li>
<li><a href="https://us.govee.com/products/goveelife-wireless-mini-vibration-sensor">Vibration sensor</a></li>
</ul>
<p>Honestly though, this suits my <del>lazy</del> efficient self just fine.</p>



</section>

 ]]></description>
  <category>hardware</category>
  <category>code</category>
  <guid>https://questionable.quarto.pub/posts/posts/kettle automation.html</guid>
  <pubDate>Wed, 01 May 2024 06:00:00 GMT</pubDate>
  <media:content url="https://questionable.quarto.pub/posts/posts/img/home-automation.png" medium="image" type="image/png" height="233" width="144"/>
</item>
<item>
  <title>Ford Maverick Truck Cubby Holder</title>
  <dc:creator>Lisa </dc:creator>
  <link>https://questionable.quarto.pub/posts/posts/maverick cubby holder.html</link>
  <description><![CDATA[ 





<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://questionable.quarto.pub/posts/posts/img/cubby-holder.jpg" class="img-fluid figure-img"></p>
<figcaption>Assembled cubby holder fits perfectly!</figcaption>
</figure>
</div>
<section id="get-it-for-yourself" class="level1">
<h1>Get it for yourself!</h1>
<p>Get the layout here: <a href="https://github.com/leesahanders/laser-cutter" class="uri">https://github.com/leesahanders/laser-cutter</a></p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://questionable.quarto.pub/posts/posts/img/cubby-holder 2.jpg" class="img-fluid figure-img"></p>
<figcaption>Simple design easy to modify and print</figcaption>
</figure>
</div>
<p>Cut on the laser cutter at the Boulder, Colorado Solid State Depot Makerspace.</p>
</section>
<section id="recommended-software" class="level1">
<h1>Recommended software:</h1>
<section id="libre-cad-httpslibrecad.org" class="level2">
<h2 class="anchored" data-anchor-id="libre-cad-httpslibrecad.org">Libre CAD <a href="https://librecad.org/" class="uri">https://librecad.org/</a></h2>
<p>This is where the bulk of your work will be done. Some of the key functions to be aware of:</p>
<ul>
<li>Line, 2 points</li>
<li>Measure, distance point to point</li>
<li>Modify, Move/Copy, Rotate, Trim 2, Attributes, Explode text into letters, Mirror</li>
</ul>
<p>Tips:</p>
<ul>
<li>You’ll need to change the snap settings at the bottom to change what it connects with.</li>
<li>When drawing a line use the @ symbol to signify from the current reference (instead of absolute). EG. <span class="citation" data-cites="0">@0</span>,10</li>
<li>Your actual cut layer should be its own layer separate from a designs / motifs layer.</li>
</ul>
<p>In order to move your files (<code>.dxf</code>) into your next software (where it will be layed out on a page for the actual laser cutter to interpret), it will need to be saved/exported (as an <code>.svg</code>).</p>
</section>
<section id="inkscape-httpsinkscape.org" class="level2">
<h2 class="anchored" data-anchor-id="inkscape-httpsinkscape.org">Inkscape <a href="https://inkscape.org/" class="uri">https://inkscape.org/</a></h2>
<p>This is where your design is laid out for the laser cutter to cut.</p>
<ul>
<li>Object, Group, Transform</li>
<li>Edit, Resize Page to Selection</li>
</ul>
</section>
</section>
<section id="specifications" class="level1">
<h1>Specifications</h1>
<section id="all-about-tabs" class="level2">
<h2 class="anchored" data-anchor-id="all-about-tabs">All about tabs</h2>
<p>3.4mm tab thicknesses work with 1/8 inch wood.</p>


</section>
</section>

 ]]></description>
  <category>laser-cutting</category>
  <category>maverick-mods</category>
  <guid>https://questionable.quarto.pub/posts/posts/maverick cubby holder.html</guid>
  <pubDate>Thu, 05 Oct 2023 06:00:00 GMT</pubDate>
  <media:content url="https://questionable.quarto.pub/posts/posts/img/cubby-holder.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Vortico rockets</title>
  <dc:creator>Lisa </dc:creator>
  <link>https://questionable.quarto.pub/posts/posts/vortico rockets.html</link>
  <description><![CDATA[ 





<p>Vorticos are a spinning rocket that helicopter down to a safe landing. By painting different patterns on the wings you can get some interesting optical effects!</p>
<p>Very fun project spread out over a couple days to assemble, paint, and then finally shoot!</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://questionable.quarto.pub/posts/posts/img/vortico.jpg" class="img-fluid figure-img"></p>
<figcaption>Painted and assembled vortico rockets</figcaption>
</figure>
</div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://questionable.quarto.pub/posts/posts/img/vortico 2.jpg" class="img-fluid figure-img"></p>
<figcaption>Launching the vorticos is best with a smaller rod to prevent wobble on takeoff</figcaption>
</figure>
</div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://questionable.quarto.pub/posts/posts/img/vortico 3.jpg" class="img-fluid figure-img"></p>
<figcaption>Up it goes!</figcaption>
</figure>
</div>
<p>Get one for yourself here: <a href="https://www.rocketarium.com/Rockets/Vortico" class="uri">https://www.rocketarium.com/Rockets/Vortico</a></p>



 ]]></description>
  <category>rockets</category>
  <guid>https://questionable.quarto.pub/posts/posts/vortico rockets.html</guid>
  <pubDate>Sun, 06 Aug 2023 06:00:00 GMT</pubDate>
  <media:content url="https://questionable.quarto.pub/posts/posts/img/vortico.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Ford Maverick Soft Topper installation</title>
  <dc:creator>Lisa </dc:creator>
  <link>https://questionable.quarto.pub/posts/posts/maverick soft topper.html</link>
  <description><![CDATA[ 





<p><a href="https://softopper.com/">Soft topper</a> is a fabric rear cover for truck beds.</p>
<p>Finally taking the time to actually install it on my Ford Maverick. Went in like a breeze, though there is some loss in visibility once it is on. Here are some of the measurements.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://questionable.quarto.pub/posts/posts/img/maverick_softtopper.jpg" class="img-fluid figure-img"></p>
<figcaption>Carefully placing the clamps</figcaption>
</figure>
</div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://questionable.quarto.pub/posts/posts/img/maverick_softtopper 2.jpg" class="img-fluid figure-img"></p>
<figcaption>The aluminum frame assembled and pushed back</figcaption>
</figure>
</div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://questionable.quarto.pub/posts/posts/img/maverick_softtopper 3.jpg" class="img-fluid figure-img"></p>
<figcaption>With the fabric cover snapped in place the rear storage is safe from the elements. Next up to work on the camper modifications!</figcaption>
</figure>
</div>



 ]]></description>
  <category>maverick-mods</category>
  <guid>https://questionable.quarto.pub/posts/posts/maverick soft topper.html</guid>
  <pubDate>Sat, 06 May 2023 06:00:00 GMT</pubDate>
  <media:content url="https://questionable.quarto.pub/posts/posts/img/maverick_softtopper 3.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Chatbot</title>
  <dc:creator>Lisa </dc:creator>
  <link>https://questionable.quarto.pub/posts/posts/chatbot.html</link>
  <description><![CDATA[ 





<p>Check out the code: <a href="https://github.com/leesahanders/Chatbot" class="uri">https://github.com/leesahanders/Chatbot</a></p>
<p>Check out the hosted chatbot: <a href="https://leesahanders.shinyapps.io/Chatbot/" class="uri">https://leesahanders.shinyapps.io/Chatbot/</a></p>
<p>The goal of this project was to build a basic <a href="https://en.wikipedia.org/wiki/Chatbot">chatbot</a> and explore a couple ways of hosting it. You can check it out in action in a Shiny app hosted at <a href="https://leesahanders.shinyapps.io/Chatbot/">leesahanders.shinyapps.io/Chatbot/</a></p>
<section id="meet-the-bot" class="level2">
<h2 class="anchored" data-anchor-id="meet-the-bot">Meet the bot</h2>
<table class="table">
<colgroup>
<col style="width: 33%">
<col style="width: 33%">
<col style="width: 33%">
</colgroup>
<thead>
<tr class="header">
<th>Chatbot</th>
<th>Name</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><img src="https://questionable.quarto.pub/posts/posts/img/Plantey_saturated.jpg" width="100" height="100"></td>
<td>Leafey</td>
<td>Leafey is here to provide some plant therapy. Leafey is very simple with just key phrase look ups based on user inputs.</td>
</tr>
</tbody>
</table>
<!---
This is a comment

Accessed from: https://leesahanders.shinyapps.io/Chatbot/ 
Admin link: https://www.shinyapps.io/admin/#/application/5843948/logs 

![Leafey Image Too Big](/files/Plantey_saturated.PNG)
![Leafey Image Too Big](/files/Plantey_saturated.PNG =250x250)
<img src="/files/Plantey_saturated.PNG" width="100" height="100">
-->
<p>It’s just the one bot for now, but check back later and there might be more added.</p>
</section>
<section id="chat-model" class="level2">
<h2 class="anchored" data-anchor-id="chat-model">Chat model</h2>
<p>Shout out to the incredible resource at https://www.r-bloggers.com/2021/01/eliza-chatbot-in-r-build-yourself-a-shrink/ where the core code parts for the chatbot are from.</p>
<p>At it’s most basic the important elements are: 1. List of answers based on key phrases 2. List of default answers if no key phrases are found 3. Pattern matching function</p>
<p>Essentially it works by using an input from the user and searching for key phrases and based on what it finds for a match returning the best matched answer. For more details check out the writeout the folks at r-bloggers did (linked above).</p>
<p>More chatbots can be created by copying the chatbot_leafey file and changing the name and contents to reflect the personality of the new one.</p>
</section>
<section id="hosting" class="level2">
<h2 class="anchored" data-anchor-id="hosting">Hosting</h2>
<p>The chat bot can now be kicked off inside whichever system wanted - whether that is in a shiny app, discord integration, or just in console using a while loop.</p>
<section id="console" class="level3">
<h3 class="anchored" data-anchor-id="console">Console</h3>
<p>Shout out to the incredible resource at https://www.r-bloggers.com/2021/01/eliza-chatbot-in-r-build-yourself-a-shrink/ where this code is from for kicking off your chatbot to interact with in the console until you hit exit:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Leafey: Hello, I am Leafey!</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb1-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">while</span> (<span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>) {</span>
<span id="cb1-3">  input <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">readline</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"You: "</span>)</span>
<span id="cb1-4">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (input <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"quit"</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">break</span></span>
<span id="cb1-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Leafey:"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Leafey</span>(input))</span>
<span id="cb1-6">}</span></code></pre></div>
</section>
<section id="shiny" class="level3">
<h3 class="anchored" data-anchor-id="shiny">Shiny</h3>
<p>The Shiny app is essentially just a wrapper for the chatbot functions. The trick was setting it up so that the user could select a chatbot and it would load the rest (so it would be reasonably scaleable), and capturing the chat with a log so that the user can see the full history of the conversation.</p>
<p>In order to use this feel free to clone the project and update the various sections as needed. Pay close attention to the section happening after the submit / chatbot selection action button is triggered. This is where the loading in of the appropriate chatbot is happening and various parameters are being set/reset.</p>
<section id="github-link" class="level4">
<h4 class="anchored" data-anchor-id="github-link">Github link</h4>
<p>The fancy ribbon is courtesy the <a href="https://github.com/colearendt/gitlink">gitlink</a>.</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ribbon_css</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://github.com/leesahanders/Chatbot"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">text =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Code on Github"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fade =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>),</span></code></pre></div>
<p>A less fancy way to include a link would be:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Adding div tag to the sidebar with git link           </span></span>
<span id="cb3-2">      tags<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">div</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">class=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"header"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">checked=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>,</span>
<span id="cb3-3">               <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#tags$p("Raw code located on Git"),</span></span>
<span id="cb3-4">               tags<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">a</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">href=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://github.com/leesahanders/Chatbot"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Raw code located on Git, check it out by clicking here"</span>)</span>
<span id="cb3-5">      ),</span></code></pre></div>
</section>
<section id="using-the-enter-key-for-triggering-the-action-button" class="level4">
<h4 class="anchored" data-anchor-id="using-the-enter-key-for-triggering-the-action-button">Using the enter key for triggering the action button</h4>
<p>Huge thanks to <a href="https://stackoverflow.com/questions/32335951/using-enter-key-with-action-button-in-r-shiny">Rahul Mishra</a> for finding an easy to use solution.</p>
<p>In the initialization of the app include the javascript function:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">jscode <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span></span>
<span id="cb4-2"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">$(function() {</span></span>
<span id="cb4-3"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  var $els = $("[data-proxy-click]");</span></span>
<span id="cb4-4"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  $.each(</span></span>
<span id="cb4-5"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    $els,</span></span>
<span id="cb4-6"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    function(idx, el) {</span></span>
<span id="cb4-7"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">      var $el = $(el);</span></span>
<span id="cb4-8"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">      var $proxy = $("#" + $el.data("proxyClick"));</span></span>
<span id="cb4-9"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">      $el.keydown(function (e) {</span></span>
<span id="cb4-10"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        if (e.keyCode == 13) {</span></span>
<span id="cb4-11"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">          $proxy.click();</span></span>
<span id="cb4-12"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        }</span></span>
<span id="cb4-13"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">      });</span></span>
<span id="cb4-14"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    }</span></span>
<span id="cb4-15"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  );</span></span>
<span id="cb4-16"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">});</span></span>
<span id="cb4-17"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span></span></code></pre></div>
<p>Then inside the UI include the call to the javascript where “Send” is changed to the label for your actionButton:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">  tags<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(tags<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">script</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">HTML</span>(jscode))),</span>
<span id="cb5-2">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data-proxy-click</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Send"</span>,</span></code></pre></div>
</section>
</section>
</section>
<section id="references" class="level2">
<h2 class="anchored" data-anchor-id="references">References</h2>
<p>Credit where credit is due - jokes are from: - https://www.rd.com/article/plant-puns/</p>
<p>For the Shiny app development I used a bunch of resources for getting the details:</p>
<ul>
<li>https://stackoverflow.com/questions/65365805/how-to-align-button-next-to-text-input</li>
<li>https://stackoverflow.com/questions/56608214/how-can-i-keep-input-track-log-in-shiny-then-print-it-and-save-it</li>
<li>https://cran.r-project.org/web/packages/kableExtra/vignettes/awesome_table_in_html.html (probably my favorite page on the internet!)</li>
<li>https://clarewest.github.io/blog/post/making-tables-shiny/</li>
<li>https://bookdown.org/yihui/rmarkdown-cookbook/kable.html</li>
<li>https://stackoverflow.com/questions/62139431/how-can-i-make-the-first-col-aligned-to-left-and-the-rest-aligned-to-center-with</li>
</ul>
<p>And some resources that are more aspirational, for future plans and features: - https://shiny.rstudio.com/articles/notifications.html - https://community.rstudio.com/t/shiny-contest-submission-table-editor-shiny-app/23600 - https://stackoverflow.com/questions/32335951/using-enter-key-with-action-button-in-r-shiny</p>
<p>Someday it would be cool to explore integrating a chatbot with discord, these resources look like they’d be useful: - https://github.com/jljsio/discordr - wrapper for Python package https://realpython.com/how-to-make-a-discord-bot-python/ - https://www.reddit.com/r/rprogramming/comments/epqfnl/making_a_discord_bot_in_r/</p>


</section>

 ]]></description>
  <category>datascience</category>
  <guid>https://questionable.quarto.pub/posts/posts/chatbot.html</guid>
  <pubDate>Mon, 19 Sep 2022 06:00:00 GMT</pubDate>
  <media:content url="https://questionable.quarto.pub/posts/posts/img/Plantey_saturated.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Observable JS for snappy datascience</title>
  <dc:creator>Lisa </dc:creator>
  <link>https://questionable.quarto.pub/posts/posts/ojs_lyme.html</link>
  <description><![CDATA[ 





<section id="observable-js" class="level2">
<h2 class="anchored" data-anchor-id="observable-js">Observable JS</h2>
<p>This Quarto document is made interactive using Observable JS. Interactive documents allow readers to modify parameters and see the results immediately. Learn more about OJS interactive documents at <a href="https://quarto.org/docs/interactive/ojs/" class="uri">https://quarto.org/docs/interactive/ojs/</a>.</p>
</section>
<section id="data-wrangling" class="level2">
<h2 class="anchored" data-anchor-id="data-wrangling">Data wrangling</h2>
<p>Load the data, using <a href="https://www.cdc.gov/lyme/stats/survfaq.html">Lyme data from the CDC</a>.</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb1" data-startfrom="25" data-source-offset="0" style="background: #f1f3f5;"><pre class="sourceCode js code-with-copy"><code class="sourceCode javascript" style="counter-reset: source-line 24;"><span id="cb1-25">data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">FileAttachment</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/lyme_data.csv"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">csv</span>({ <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">typed</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">true</span> })</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<div id="ojs-cell-1" data-nodetype="declaration">

</div>
</div>
</div>
<p>Filter options</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb2" data-startfrom="32" data-source-offset="-0" style="background: #f1f3f5;"><pre class="sourceCode js code-with-copy"><code class="sourceCode javascript" style="counter-reset: source-line 31;"><span id="cb2-32">viewof state <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Inputs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map</span>(d <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">=&gt;</span> d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Stname</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> {<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">multiple</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">value</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Alaska"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">label</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Choose a state: "</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">sort</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">unique</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">true</span>})</span>
<span id="cb2-33">filtered <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(data) {</span>
<span id="cb2-34">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> state<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">includes</span>(data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Stname</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-35">})</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<div>
<div id="ojs-cell-2-1" data-nodetype="declaration">

</div>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<div id="ojs-cell-2-2" data-nodetype="declaration">

</div>
</div>
</div>
</div>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-1-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-1" aria-controls="tabset-1-1" aria-selected="true">Plot</a></li><li class="nav-item"><a class="nav-link" id="tabset-1-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-2" aria-controls="tabset-1-2" aria-selected="false">Data</a></li></ul>
<div class="tab-content">
<div id="tabset-1-1" class="tab-pane active" aria-labelledby="tabset-1-1-tab">
<p>Stacked bar chart of cases by state by year, remember to select an option above.</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb3" data-startfrom="43" data-source-offset="0" style="background: #f1f3f5;"><pre class="sourceCode js code-with-copy"><code class="sourceCode javascript" style="counter-reset: source-line 42;"><span id="cb3-43">Plot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>({</span>
<span id="cb3-44">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> {</span>
<span id="cb3-45">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">grid</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb3-46">  }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb3-47">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">marks</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> [</span>
<span id="cb3-48">    Plot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">barY</span>(filtered<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> {<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"date"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"total_cases"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">fill</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#bab0ab"</span>})<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb3-49">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;!--</span> plot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">text</span>(filtered<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> {<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"date"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"total_cases"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">text</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Stname"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">textAnchor</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"end"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">dx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>})<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb3-50">    Plot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ruleY</span>([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])</span>
<span id="cb3-51">  ]</span>
<span id="cb3-52">})</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<div id="ojs-cell-3" data-nodetype="expression">

</div>
</div>
</div>
</div>
<div id="tabset-1-2" class="tab-pane" aria-labelledby="tabset-1-2-tab">
<p>Aggregated dataset for all states.</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb4" data-startfrom="60" data-source-offset="0" style="background: #f1f3f5;"><pre class="sourceCode js code-with-copy"><code class="sourceCode javascript" style="counter-reset: source-line 59;"><span id="cb4-60">Inputs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">table</span>(data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> { <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">sort</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"date"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">reverse</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">true</span> })</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<div id="ojs-cell-4" data-nodetype="expression">

</div>
</div>
</div>
</div>
</div>
</div>
</section>
<section id="references" class="level2">
<h2 class="anchored" data-anchor-id="references">References</h2>
<ul>
<li><a href="https://journals.plos.org/plosone/article?id=10.1371/journal.pone.0260122" class="uri">https://journals.plos.org/plosone/article?id=10.1371/journal.pone.0260122</a></li>
<li><a href="https://www.hopkinslymetracker.org/" class="uri">https://www.hopkinslymetracker.org/</a></li>
<li><a href="https://quarto.org/docs/interactive/ojs/" class="uri">https://quarto.org/docs/interactive/ojs/</a></li>
<li>Data from: <a href="https://www.cdc.gov/lyme/stats/survfaq.html\" class="uri">https://www.cdc.gov/lyme/stats/survfaq.html\</a></li>
<li>Additional data options: <a href="https://data.world/datasets/lyme-disease" class="uri">https://data.world/datasets/lyme-disease</a></li>
<li>Some plots options using observable: <a href="https://github.com/observablehq/plot" class="uri">https://github.com/observablehq/plot</a> and <a href="https://observablehq.com/@observablehq/plot-bar" class="uri">https://observablehq.com/@observablehq/plot-bar</a></li>
<li>Some various tutorials: <a href="https://observablehq.com/tutorials" class="uri">https://observablehq.com/tutorials</a></li>
</ul>


</section>

 ]]></description>
  <category>datascience</category>
  <guid>https://questionable.quarto.pub/posts/posts/ojs_lyme.html</guid>
  <pubDate>Thu, 04 Aug 2022 06:00:00 GMT</pubDate>
  <media:content url="https://questionable.quarto.pub/posts/posts/img/ojs_bar_chart.JPG" medium="image"/>
</item>
<item>
  <title>AI generated art</title>
  <dc:creator>Lisa </dc:creator>
  <link>https://questionable.quarto.pub/posts/posts/ai_art.html</link>
  <description><![CDATA[ 





<section id="but-first-a-disclaimer" class="level2">
<h2 class="anchored" data-anchor-id="but-first-a-disclaimer">But first, a disclaimer</h2>
<p>AI is controversial, and I’d recommend watching these two videos to understand some technical points on why that is:</p>
<ul>
<li><a href="https://www.youtube.com/watch?v=ajGX7odA87k">Keynote talk “USENIX Security ’18-Q: Why Do Keynote Speakers Keep Suggesting That Improving Security Is Possible?”</a></li>
<li><a href="https://www.youtube.com/watch?v=AaU6tI2pb3M">Here’s What Ethical AI Really Means - YouTube philosophy tube</a></li>
</ul>
</section>
<section id="ai-generated-art" class="level2">
<h2 class="anchored" data-anchor-id="ai-generated-art">AI Generated Art</h2>
<p>AI isn’t a new concept. Using AI’s to generate art isn’t a new concept. Having that available as app that actually creates some pretty fun results is pretty new.</p>
<p>As someone whose artistic ambitions always are greater than my actual ability, this has been a surprisingly fun and rewarding technology to play around with.</p>
<p>The three that I recommend are:</p>
<ul>
<li><p>My first AI art generating app (5 free pieces of art per day): <a href="https://www.starryai.com/" class="uri">https://www.starryai.com/</a></p></li>
<li><p>Doesn’t require log in (5 free pieces of art per day, however using incognito mode or edge counts as a separate user for 15 pieces of art per day): <a href="https://creator.nightcafe.studio/" class="uri">https://creator.nightcafe.studio/</a></p></li>
<li><p>No limit to number of pieces, landscapes only: <a href="https://www.wombo.art/" class="uri">https://www.wombo.art/</a></p></li>
</ul>
<p>There are a bunch more I’m looking forward to trying: &lt;https://www.unite.ai/10-best-ai-art-generators/#:~:text=Another one of the best,trained with millions of images&gt;</p>
</section>
<section id="highlights" class="level2">
<h2 class="anchored" data-anchor-id="highlights">Highlights</h2>
<p>Images in : img/starryai/</p>
<div>

</div>
<div class="quarto-layout-panel" data-layout-ncol="3">
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="img/starryai/s1.png" class="lightbox" data-glightbox="description: .lightbox-desc-1" data-gallery="my-gallery" title="solarpunk"><img src="https://questionable.quarto.pub/posts/posts/img/starryai/s1.png" class="img-fluid figure-img" alt="solarpunk"></a></p>
<figcaption>solarpunk</figcaption>
</figure>
</div>
</div>
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="img/starryai/s3.png" class="lightbox" data-glightbox="description: .lightbox-desc-2" data-gallery="my-gallery" title="solar panel satellite"><img src="https://questionable.quarto.pub/posts/posts/img/starryai/s3.png" class="img-fluid figure-img" alt="solar panel satellite"></a></p>
<figcaption>solar panel satellite</figcaption>
</figure>
</div>
</div>
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="img/starryai/s11.png" class="lightbox" data-glightbox="description: .lightbox-desc-3" data-gallery="my-gallery" title="pluto"><img src="https://questionable.quarto.pub/posts/posts/img/starryai/s11.png" class="img-fluid figure-img" alt="pluto"></a></p>
<figcaption>pluto</figcaption>
</figure>
</div>
</div>
</div>
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="img/starryai/s10.png" class="lightbox" data-glightbox="description: .lightbox-desc-4" data-gallery="my-gallery" title="spaceship flying down the sidewalk"><img src="https://questionable.quarto.pub/posts/posts/img/starryai/s10.png" class="img-fluid figure-img" alt="spaceship flying down the sidewalk"></a></p>
<figcaption>spaceship flying down the sidewalk</figcaption>
</figure>
</div>
</div>
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="img/starryai/s7.png" class="lightbox" data-glightbox="description: .lightbox-desc-5" data-gallery="my-gallery" title="Hydraulic dam fairytale"><img src="https://questionable.quarto.pub/posts/posts/img/starryai/s7.png" class="img-fluid figure-img" alt="Hydraulic dam fairytale"></a></p>
<figcaption>Hydraulic dam fairytale</figcaption>
</figure>
</div>
</div>
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="img/starryai/s2.png" class="lightbox" data-glightbox="description: .lightbox-desc-6" data-gallery="my-gallery" title="the storm rolled in"><img src="https://questionable.quarto.pub/posts/posts/img/starryai/s2.png" class="img-fluid figure-img" alt="the storm rolled in"></a></p>
<figcaption>the storm rolled in</figcaption>
</figure>
</div>
</div>
</div>
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="img/starryai/s8.png" class="lightbox" data-glightbox="description: .lightbox-desc-7" data-gallery="my-gallery" title="I believe in a thing called love"><img src="https://questionable.quarto.pub/posts/posts/img/starryai/s8.png" class="img-fluid figure-img" alt="I believe in a thing called love"></a></p>
<figcaption>I believe in a thing called love</figcaption>
</figure>
</div>
</div>
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="img/starryai/placeholder.png" class="lightbox" data-glightbox="description: .lightbox-desc-8" data-gallery="my-gallery" title="Placeholder"><img src="https://questionable.quarto.pub/posts/posts/img/starryai/placeholder.png" class="img-fluid figure-img" alt="Placeholder"></a></p>
<figcaption>Placeholder</figcaption>
</figure>
</div>
</div>
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="img/starryai/spacecat.png" class="lightbox" data-glightbox="description: .lightbox-desc-9" data-gallery="my-gallery" title="Spacecat"><img src="https://questionable.quarto.pub/posts/posts/img/starryai/spacecat.png" class="img-fluid figure-img" alt="Spacecat"></a></p>
<figcaption>Spacecat</figcaption>
</figure>
</div>
</div>
</div>
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="img/starryai/party around a bonfire.png" class="lightbox" data-glightbox="description: .lightbox-desc-10" data-gallery="my-gallery" title="party around a bonfire"><img src="https://questionable.quarto.pub/posts/posts/img/starryai/party around a bonfire.png" class="img-fluid figure-img" alt="party around a bonfire"></a></p>
<figcaption>party around a bonfire</figcaption>
</figure>
</div>
</div>
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="img/starryai/fireflies.png" class="lightbox" data-glightbox="description: .lightbox-desc-11" data-gallery="my-gallery" title="fireflies"><img src="https://questionable.quarto.pub/posts/posts/img/starryai/fireflies.png" class="img-fluid figure-img" alt="fireflies"></a></p>
<figcaption>fireflies</figcaption>
</figure>
</div>
</div>
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="img/starryai/thunderstorm over galveston.png" class="lightbox" data-glightbox="description: .lightbox-desc-12" data-gallery="my-gallery" title="thunderstorm over galveston"><img src="https://questionable.quarto.pub/posts/posts/img/starryai/thunderstorm over galveston.png" class="img-fluid figure-img" alt="thunderstorm over galveston"></a></p>
<figcaption>thunderstorm over galveston</figcaption>
</figure>
</div>
</div>
</div>
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="img/starryai/woodland creatures having a tea party.png" class="lightbox" data-glightbox="description: .lightbox-desc-13" data-gallery="my-gallery" title="woodland creatures having a tea party"><img src="https://questionable.quarto.pub/posts/posts/img/starryai/woodland creatures having a tea party.png" class="img-fluid figure-img" alt="woodland creatures having a tea party"></a></p>
<figcaption>woodland creatures having a tea party</figcaption>
</figure>
</div>
</div>
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="img/starryai/pacific rim.png" class="lightbox" data-glightbox="description: .lightbox-desc-14" data-gallery="my-gallery" title="Pacific Rim"><img src="https://questionable.quarto.pub/posts/posts/img/starryai/pacific rim.png" class="img-fluid figure-img" alt="Pacific Rim"></a></p>
<figcaption>Pacific Rim</figcaption>
</figure>
</div>
</div>
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="img/starryai/mind_the_gap.png" class="lightbox" data-glightbox="description: .lightbox-desc-15" data-gallery="my-gallery" title="Mind the Gap"><img src="https://questionable.quarto.pub/posts/posts/img/starryai/mind_the_gap.png" class="img-fluid figure-img" alt="Mind the Gap"></a></p>
<figcaption>Mind the Gap</figcaption>
</figure>
</div>
</div>
</div>
</div>
<p>Images in : img/nightcafe</p>
<div>

</div>
<div class="quarto-layout-panel" data-layout-ncol="3">
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="img/nightcafe/robotic owl in space.JPG" class="lightbox" data-glightbox="description: .lightbox-desc-16" data-gallery="my-gallery" title="Robotic owl in space"><img src="https://questionable.quarto.pub/posts/posts/img/nightcafe/robotic owl in space.JPG" class="img-fluid figure-img" alt="Robotic owl in space"></a></p>
<figcaption>Robotic owl in space</figcaption>
</figure>
</div>
</div>
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="img/nightcafe/The monster from alien on a date.JPG" class="lightbox" data-glightbox="description: .lightbox-desc-17" data-gallery="my-gallery" title="The monster from alien on a date"><img src="https://questionable.quarto.pub/posts/posts/img/nightcafe/The monster from alien on a date.JPG" class="img-fluid figure-img" alt="The monster from alien on a date"></a></p>
<figcaption>The monster from alien on a date</figcaption>
</figure>
</div>
</div>
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="img/nightcafe/selfie.JPG" class="lightbox" data-glightbox="description: .lightbox-desc-18" data-gallery="my-gallery" title="selfie"><img src="https://questionable.quarto.pub/posts/posts/img/nightcafe/selfie.JPG" class="img-fluid figure-img" alt="selfie"></a></p>
<figcaption>selfie</figcaption>
</figure>
</div>
</div>
</div>
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="img/nightcafe/brain on fire.JPG" class="lightbox" data-glightbox="description: .lightbox-desc-19" data-gallery="my-gallery" title="brain on fire"><img src="https://questionable.quarto.pub/posts/posts/img/nightcafe/brain on fire.JPG" class="img-fluid figure-img" alt="brain on fire"></a></p>
<figcaption>brain on fire</figcaption>
</figure>
</div>
</div>
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="img/nightcafe/cyborg bartender.JPG" class="lightbox" data-glightbox="description: .lightbox-desc-20" data-gallery="my-gallery" title="cyborg bartender"><img src="https://questionable.quarto.pub/posts/posts/img/nightcafe/cyborg bartender.JPG" class="img-fluid figure-img" alt="cyborg bartender"></a></p>
<figcaption>cyborg bartender</figcaption>
</figure>
</div>
</div>
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="img/nightcafe/ammonite seashell on the beach being worshipped by monsters.JPG" class="lightbox" data-glightbox="description: .lightbox-desc-21" data-gallery="my-gallery" title="ammonite seashell on the beach being worshipped by monsters"><img src="https://questionable.quarto.pub/posts/posts/img/nightcafe/ammonite seashell on the beach being worshipped by monsters.JPG" class="img-fluid figure-img" alt="ammonite seashell on the beach being worshipped by monsters"></a></p>
<figcaption>ammonite seashell on the beach being worshipped by monsters</figcaption>
</figure>
</div>
</div>
</div>
</div>
<p>Tips on dealing with displaying images in a rendered quarto document: <a href="https://quarto.org/docs/authoring/figures.html#figure-panels" class="uri">https://quarto.org/docs/authoring/figures.html#figure-panels</a></p>



</section>

 ]]></description>
  <category>art</category>
  <guid>https://questionable.quarto.pub/posts/posts/ai_art.html</guid>
  <pubDate>Wed, 03 Aug 2022 06:00:00 GMT</pubDate>
  <media:content url="https://questionable.quarto.pub/posts/posts/img/starryai/placeholder.png" medium="image" type="image/png" height="144" width="144"/>
</item>
<item>
  <title>What is Quarto?</title>
  <link>https://questionable.quarto.pub/posts/posts/quarto.html</link>
  <description><![CDATA[ 





<p>The obligatory starting template with a couple links.</p>
<section id="quarto-blogs" class="level2">
<h2 class="anchored" data-anchor-id="quarto-blogs">Quarto blogs</h2>
<p>It’s a whole new exciting world! And the default project has a lot of exciting files to explore.</p>
<p>I’m using:</p>
<ul>
<li><p><a href="https://quarto.org/docs/websites/website-blog.html" class="uri">https://quarto.org/docs/websites/website-blog.html</a></p></li>
<li><p><a href="https://albert-rapp.de/posts/13_quarto_blog_writing_guide/13_quarto_blog_writing_guide.html" class="uri">https://albert-rapp.de/posts/13_quarto_blog_writing_guide/13_quarto_blog_writing_guide.html</a></p></li>
</ul>
</section>
<section id="quarto" class="level2">
<h2 class="anchored" data-anchor-id="quarto">Quarto</h2>
</section>
<section id="example" class="level2">
<h2 class="anchored" data-anchor-id="example">Example</h2>
<p>Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <a href="https://quarto.org" class="uri">https://quarto.org</a>.</p>
</section>
<section id="running-code" class="level2">
<h2 class="anchored" data-anchor-id="running-code">Running Code</h2>
<p>When you click the <strong>Render</strong> button a document will be generated that includes both content and the output of embedded code. You can embed code like this:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 2</code></pre>
</div>
</div>
<p>You can add options to executable code like this</p>
<div class="cell">
<div class="cell-output cell-output-stdout">
<pre><code>[1] 4</code></pre>
</div>
</div>
<p>The <code>echo: false</code> option disables the printing of code (only output is displayed).</p>


</section>

 ]]></description>
  <category>datascience</category>
  <guid>https://questionable.quarto.pub/posts/posts/quarto.html</guid>
  <pubDate>Thu, 28 Jul 2022 06:00:00 GMT</pubDate>
  <media:content url="https://questionable.quarto.pub/posts/posts/img/welcome.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Resin Dice</title>
  <dc:creator>Lisa </dc:creator>
  <link>https://questionable.quarto.pub/posts/posts/resin.html</link>
  <description><![CDATA[ 





<style>
table, th, td {
}

th, td {
  padding: 10px;
}
</style>
<section id="recent-dice-highlights" class="level2">
<h2 class="anchored" data-anchor-id="recent-dice-highlights">Recent dice highlights</h2>
<section id="flourescent-glitter-dice-set" class="level3">
<h3 class="anchored" data-anchor-id="flourescent-glitter-dice-set">Flourescent Glitter Dice Set</h3>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://questionable.quarto.pub/posts/posts/img/resin/PXL_20211226_172938496.jpg" class="img-fluid figure-img"></p>
<figcaption>Flourescent dice set (all glitter dice)</figcaption>
</figure>
</div>
<blockquote class="instagram-media blockquote" data-instgrm-captioned="" data-instgrm-permalink="https://www.instagram.com/tv/CYPDqkhI0Xb/?utm_source=ig_embed&amp;utm_campaign=loading" data-instgrm-version="14" style=" background:#FFF; border:0; border-radius:3px; box-shadow:0 0 1px 0 rgba(0,0,0,0.5),0 1px 10px 0 rgba(0,0,0,0.15); margin: 1px; max-width:540px; min-width:326px; padding:0; width:99.375%; width:-webkit-calc(100% - 2px); width:calc(100% - 2px);">
<div style="padding:16px;">
<a href="https://www.instagram.com/tv/CYPDqkhI0Xb/?utm_source=ig_embed&amp;utm_campaign=loading" style=" background:#FFFFFF; line-height:0; padding:0 0; text-align:center; text-decoration:none; width:100%;" target="_blank">
<div style=" display: flex; flex-direction: row; align-items: center;">
<div style="background-color: #F4F4F4; border-radius: 50%; flex-grow: 0; height: 40px; margin-right: 14px; width: 40px;">

</div>
<div style="display: flex; flex-direction: column; flex-grow: 1; justify-content: center;">
<div style=" background-color: #F4F4F4; border-radius: 4px; flex-grow: 0; height: 14px; margin-bottom: 6px; width: 100px;">

</div>
<div style=" background-color: #F4F4F4; border-radius: 4px; flex-grow: 0; height: 14px; width: 60px;">

</div>
</div>
</div>
<div style="padding: 19% 0;">

</div>
<div style="display:block; height:50px; margin:0 auto 12px; width:50px;">
<svg width="50px" height="50px" viewbox="0 0 60 60" version="1.1" xmlns="https://www.w3.org/2000/svg" xlink="https://www.w3.org/1999/xlink">
<g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"><g transform="translate(-511.000000, -20.000000)" fill="#000000"><g><path d="M556.869,30.41 C554.814,30.41 553.148,32.076 553.148,34.131 C553.148,36.186 554.814,37.852 556.869,37.852 C558.924,37.852 560.59,36.186 560.59,34.131 C560.59,32.076 558.924,30.41 556.869,30.41 M541,60.657 C535.114,60.657 530.342,55.887 530.342,50 C530.342,44.114 535.114,39.342 541,39.342 C546.887,39.342 551.658,44.114 551.658,50 C551.658,55.887 546.887,60.657 541,60.657 M541,33.886 C532.1,33.886 524.886,41.1 524.886,50 C524.886,58.899 532.1,66.113 541,66.113 C549.9,66.113 557.115,58.899 557.115,50 C557.115,41.1 549.9,33.886 541,33.886 M565.378,62.101 C565.244,65.022 564.756,66.606 564.346,67.663 C563.803,69.06 563.154,70.057 562.106,71.106 C561.058,72.155 560.06,72.803 558.662,73.347 C557.607,73.757 556.021,74.244 553.102,74.378 C549.944,74.521 548.997,74.552 541,74.552 C533.003,74.552 532.056,74.521 528.898,74.378 C525.979,74.244 524.393,73.757 523.338,73.347 C521.94,72.803 520.942,72.155 519.894,71.106 C518.846,70.057 518.197,69.06 517.654,67.663 C517.244,66.606 516.755,65.022 516.623,62.101 C516.479,58.943 516.448,57.996 516.448,50 C516.448,42.003 516.479,41.056 516.623,37.899 C516.755,34.978 517.244,33.391 517.654,32.338 C518.197,30.938 518.846,29.942 519.894,28.894 C520.942,27.846 521.94,27.196 523.338,26.654 C524.393,26.244 525.979,25.756 528.898,25.623 C532.057,25.479 533.004,25.448 541,25.448 C548.997,25.448 549.943,25.479 553.102,25.623 C556.021,25.756 557.607,26.244 558.662,26.654 C560.06,27.196 561.058,27.846 562.106,28.894 C563.154,29.942 563.803,30.938 564.346,32.338 C564.756,33.391 565.244,34.978 565.378,37.899 C565.522,41.056 565.552,42.003 565.552,50 C565.552,57.996 565.522,58.943 565.378,62.101 M570.82,37.631 C570.674,34.438 570.167,32.258 569.425,30.349 C568.659,28.377 567.633,26.702 565.965,25.035 C564.297,23.368 562.623,22.342 560.652,21.575 C558.743,20.834 556.562,20.326 553.369,20.18 C550.169,20.033 549.148,20 541,20 C532.853,20 531.831,20.033 528.631,20.18 C525.438,20.326 523.257,20.834 521.349,21.575 C519.376,22.342 517.703,23.368 516.035,25.035 C514.368,26.702 513.342,28.377 512.574,30.349 C511.834,32.258 511.326,34.438 511.181,37.631 C511.035,40.831 511,41.851 511,50 C511,58.147 511.035,59.17 511.181,62.369 C511.326,65.562 511.834,67.743 512.574,69.651 C513.342,71.625 514.368,73.296 516.035,74.965 C517.703,76.634 519.376,77.658 521.349,78.425 C523.257,79.167 525.438,79.673 528.631,79.82 C531.831,79.965 532.853,80.001 541,80.001 C549.148,80.001 550.169,79.965 553.369,79.82 C556.562,79.673 558.743,79.167 560.652,78.425 C562.623,77.658 564.297,76.634 565.965,74.965 C567.633,73.296 568.659,71.625 569.425,69.651 C570.167,67.743 570.674,65.562 570.82,62.369 C570.966,59.17 571,58.147 571,50 C571,41.851 570.966,40.831 570.82,37.631"></path></g></g></g>
</svg>
</div>
<div style="padding-top: 8px;">
<div style=" color:#3897f0; font-family:Arial,sans-serif; font-size:14px; font-style:normal; font-weight:550; line-height:18px;">
View this post on Instagram
</div>
</div>
<div style="padding: 12.5% 0;">

</div>
<div style="display: flex; flex-direction: row; margin-bottom: 14px; align-items: center;">
<div>
<div style="background-color: #F4F4F4; border-radius: 50%; height: 12.5px; width: 12.5px; transform: translateX(0px) translateY(7px);">

</div>
<div style="background-color: #F4F4F4; height: 12.5px; transform: rotate(-45deg) translateX(3px) translateY(1px); width: 12.5px; flex-grow: 0; margin-right: 14px; margin-left: 2px;">

</div>
<div style="background-color: #F4F4F4; border-radius: 50%; height: 12.5px; width: 12.5px; transform: translateX(9px) translateY(-18px);">

</div>
</div>
<div style="margin-left: 8px;">
<div style=" background-color: #F4F4F4; border-radius: 50%; flex-grow: 0; height: 20px; width: 20px;">

</div>
<div style=" width: 0; height: 0; border-top: 2px solid transparent; border-left: 6px solid #f4f4f4; border-bottom: 2px solid transparent; transform: translateX(16px) translateY(-4px) rotate(30deg)">

</div>
</div>
<div style="margin-left: auto;">
<div style=" width: 0px; border-top: 8px solid #F4F4F4; border-right: 8px solid transparent; transform: translateY(16px);">

</div>
<div style=" background-color: #F4F4F4; flex-grow: 0; height: 12px; width: 16px; transform: translateY(-4px);">

</div>
<div style=" width: 0; height: 0; border-top: 8px solid #F4F4F4; border-left: 8px solid transparent; transform: translateY(-4px) translateX(8px);">

</div>
</div>
</div>
<div style="display: flex; flex-direction: column; flex-grow: 1; justify-content: center; margin-bottom: 24px;">
<div style=" background-color: #F4F4F4; border-radius: 4px; flex-grow: 0; height: 14px; margin-bottom: 6px; width: 224px;">

</div>
<div style=" background-color: #F4F4F4; border-radius: 4px; flex-grow: 0; height: 14px; width: 144px;">

</div>
</div>
</a>
<p style=" color:#c9c8cd; font-family:Arial,sans-serif; font-size:14px; line-height:17px; margin-bottom:0; margin-top:8px; overflow:hidden; padding:8px 0 7px; text-align:center; text-overflow:ellipsis; white-space:nowrap;">
<a href="https://www.instagram.com/tv/CYPDqkhI0Xb/?utm_source=ig_embed&amp;utm_campaign=loading" style=" color:#c9c8cd; font-family:Arial,sans-serif; font-size:14px; font-style:normal; font-weight:normal; line-height:17px; text-decoration:none;" target="_blank">A post shared by <span class="citation" data-cites="lisa.needs.to.make">@lisa.needs.to.make</span></a>
</p>
</div>
</blockquote>
<script async="" src="//www.instagram.com/embed.js"></script>
<!-- ::: {layout-nrow=1} -->
<!-- ![Fire glitter](img/resin/glitterdice_3.gif) -->
<!-- ![UV Flourescent and glitter filled giant D20](img/resin/glitterdice_2.gif) -->
<!-- ::: -->
</section>
<section id="royal-purple-dice-set" class="level3">
<h3 class="anchored" data-anchor-id="royal-purple-dice-set">Royal Purple Dice Set</h3>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://questionable.quarto.pub/posts/posts/img/resin/Dice_purple.jpg" class="img-fluid figure-img"></p>
<figcaption>Royal purple dice set with beautiful crystals due to cold temperatures</figcaption>
</figure>
</div>
</section>
<section id="fire-red-dice-set" class="level3">
<h3 class="anchored" data-anchor-id="fire-red-dice-set">Fire Red Dice Set</h3>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://questionable.quarto.pub/posts/posts/img/resin/Dice_red.jpg" class="img-fluid figure-img"></p>
<figcaption>Fire red dice set, with some glitter dice!</figcaption>
</figure>
</div>
<!-- ![Fire dice set](img/resin/PXL_20210214_233000132.MP.jpg) -->
<!-- ::: {layout-nrow=1} -->
<!-- ![Flourescent dice set (all glitter dice)](img/resin/PXL_20211226_172938496.jpg) -->
<!-- ![Royal gold and purple dice set](img/resin/PXL_20211224_033628654.jpg) -->
<!-- ::: -->
</section>
</section>
<section id="experiments" class="level2">
<h2 class="anchored" data-anchor-id="experiments">Experiments</h2>
<section id="silicone-mold" class="level3">
<h3 class="anchored" data-anchor-id="silicone-mold">Silicone Mold</h3>
<table style="width: 100%">
<colgroup>
<col span="1" style="width: 35%;">
<col span="1" style="width: 65%;">
</colgroup>
<tbody><tr>
<td>
<img src="https://questionable.quarto.pub/posts/posts/img/resin/PXL_20201005_031026679.MP.jpg" style="width:100%; border:10px solid; margin-right: 20px" align="left">
</td>
<td>
<p>The basics I’ve gathered for learning how to make molds are:</p>
<ul>
<li>Smooth-On OOMOO</li>
<li>Nitrile Gloves</li>
<li>Small hand torch (originally meant for creme brulee)</li>
<li>A Safety Pin</li>
<li>Plasticine Clay</li>
<li>Various small disposable cups, disposable plastic fork, measuring cup</li>
<li>Handful of my least favorite dice</li>
</ul>
</td>
</tr>
<tr>
<td>
<img src="https://questionable.quarto.pub/posts/posts/img/resin/PXL_20201005_013447645.MP.jpg" style="width:100%; border:10px solid; margin-right: 20px" align="left">
</td>
<td>
<p>Going to the crafts store the whole time I was thinking “this is going to go GREAT. How hard could it be? The videos are so calming, surely the whole process is straight up zen.”</p>
<p>WRONG.</p>
After learning how difficult it is to attach a pin into a D6 (I would describe it more as teetering perilously rather than actually mounted) we got to move onto lessons into practically what pot time is. While on thebox it may say pot time of 30 minutes in practice I had less than 20 minutes to get the silicone into the mold before it was hardening to the point of not flowing smoothly.
</td>
</tr>
<tr>
<td>
<img src="https://questionable.quarto.pub/posts/posts/img/resin/PXL_20201005_015535872.MP.jpg" style="width:100%; border:10px solid; margin-right: 20px" align="left">
</td>
<td>
Also had complete failure of the attempt at a vacuum chamber using my hand vaccuum, a small bell jar, and the valve on one of those clothes bags that let you vacuum the air out for better storage. No bubbles were successfully pulled out using this method, whether due to lack of a seal between the bell jar and the valve or if just wasn’t a strong enough vacuum.
</td>
</tr>
<tr>
<td>
<img src="https://questionable.quarto.pub/posts/posts/img/resin/PXL_20201005_022732163.MP.jpg" style="width:100%; border:10px solid; margin-right: 20px" align="left">
</td>
<td>
The three mold attempts are sitting out to cure overnight before I’ll begin the process of removing the die and trying out adding resin. I’m doubtful any of these turned out but what a wonderful way to spend a couple hours!
</td>
</tr>
<tr>
<td>
</td>
<td>
<p style="color:grey; font-style:italic;" align="right">
10/4/2020
</p>
</td>
</tr>
</tbody></table>
<hr>
<table style="width: 100%;">
<colgroup>
<col span="1" style="width: 35%;">
<col span="1" style="width: 65%;">
</colgroup>
<tbody><tr>
<td>
<img src="https://questionable.quarto.pub/posts/posts/img/resin/PXL_20201005_161849020.MP.jpg" style="width:100%; border:10px solid; margin-right: 20px" align="left">
</td>
<td>
Try 2 of creating the silicone mold. I was able to use the lessons from last time and create a mold with the sprue large enough to get a good amount in there while still having it be small enough that hopefully polishing won’t be horrible.
</td>
</tr>
<tr>
<td>
<img src="https://questionable.quarto.pub/posts/posts/img/resin/PXL_20201005_163835042.MP_2.jpg" style="width:100%; border:10px solid; margin-right: 20px" align="left">
</td>
<td>
Interesting enough I think that the mixture is very sensitive to the quantities of each part. While I was very careful to match the volumes using my trusty 1/2 cup measuring spoon we can notice a distinct change in color. Despite this change in color it did successfully set and it doesn’t feel different and will do nicely as a mold.
</td>
</tr>
<tr>
<td>
<img src="https://questionable.quarto.pub/posts/posts/img/resin/PXL_20201005_160755962.MP.jpg" style="width:100%; border:10px solid; margin-right: 20px" align="left">
</td>
<td>
I’m a little concerned with my splits in the mold for removing the pieces. Hopefully it will seal up well enough that we won’t have the resin leaking out or really large obvious lines.
</td>
</tr>
<tr>
<td>
</td>
<td>
<p style="color:grey; font-style:italic;" align="right">
10/5-6/2020
</p>
</td>
</tr>
</tbody></table>
<hr>
</section>
<section id="pouring-the-resin" class="level3">
<h3 class="anchored" data-anchor-id="pouring-the-resin">Pouring the Resin</h3>
<table style="width: 100%" cellpadding="5">
<colgroup>
<col span="1" style="width: 35%;">
<col span="1" style="width: 65%;">
</colgroup>
<tbody><tr>
<td>
<img src="https://questionable.quarto.pub/posts/posts/img/resin/PXL_20201007_004924418.MP.jpg" style="width:100%; border:10px solid; margin-right: 20px" align="left">
</td>
<td>
<p>The ingredients for pouring the resin:</p>
<ul>
<li>Dried flowers</li>
<li>Food coloring</li>
<li>Mica powders</li>
<li>EasyCast resin</li>
<li>Dixie cups, pipettes, nitrile glove, facemask (not pictured)</li>
</ul>
</td>
</tr>
<tr>
<td>
<img src="https://questionable.quarto.pub/posts/posts/img/resin/PXL_20201008_054415456.MP.jpg" style="width:100%; border:10px solid; margin-right: 20px" align="left">
</td>
<td>
<p>This batch I decided to focus on blues.</p>
<p>Recipe:</p>
<ul>
<li>2 drops blue food coloring</li>
<li>For 2 of the dice added the green mica powder</li>
</ul>
Since I layered it in with pure blue on bottom and the blue + mica powder on top it really developed a beautiful layering effect.
</td>
</tr><tr>
</tr><tr>
<td>
</td>
<td>
<p style="color:grey; font-style:italic;" align="right">
10/6/2020
</p>
</td>
</tr>
</tbody></table>
<hr>
<table style="width: 100%" cellpadding="5">
<colgroup>
<col span="1" style="width: 35%;">
<col span="1" style="width: 65%;">
</colgroup>
<tbody><tr>
<td>
<img src="https://questionable.quarto.pub/posts/posts/img/resin/PXL_20201009_010445950.MP.jpg" style="width:100%; border:10px solid; margin-right: 20px" align="left">
</td>
<td>
<p>Recipe:</p>
<ul>
<li>1 drop ‘kiwi’ food coloring</li>
<li>Half of a handle full of green metallic mica powder</li>
<li>Blue flower</li>
</ul>
Thoroughly mix equal parts of resin for 2 minutes, transfer to second container and add coloring. Mix for an additional minute and use pipettes (two pipette method where one can fill while you use the other one) to fill each mold. Gently insert a flower once 3/4 full. Swish the containers by rotating to encourage air bubbles to exit from difficult places in the mold.
</td>
</tr>
<tr>
<td>
<img src="https://questionable.quarto.pub/posts/posts/img/resin/PXL_20201009_010433085.MP.jpg" style="width:100%; border:10px solid; margin-right: 20px" align="left">
</td>
<td>
Wow this just turned out BEAUTIFUL.
</td>
</tr>
<tr>
<td>
</td>
<td>
<p style="color:grey; font-style:italic;" align="right">
10/7/2020
</p>
</td>
</tr>
</tbody></table>
<hr>
<table style="width: 100%">
<colgroup>
<col span="1" style="width: 35%;">
<col span="1" style="width: 65%;">
</colgroup>
<tbody><tr>
<td>
<img src="https://questionable.quarto.pub/posts/posts/img/resin/PXL_20201010_030648486.MP.jpg" style="width:100%; border:10px solid; margin-right: 20px" align="left">
</td>
<td>
Same recipe as before, still looks beautiful and we now have a matching set of 6!
</td>
</tr>
<tr>
<td>
</td>
<td>
<p style="color:grey; font-style:italic;" align="right">
10/8/2020
</p>
</td>
</tr>
</tbody></table>
<hr>
</section>
<section id="polishing" class="level3">
<h3 class="anchored" data-anchor-id="polishing">Polishing</h3>
<table style="width: 100%">
<colgroup>
<col span="1" style="width: 35%;">
<col span="1" style="width: 65%;">
</colgroup>
<tbody><tr>
<td>
<img src="https://questionable.quarto.pub/posts/posts/img/resin/PXL_20201008_180158037.MP.jpg" style="width:100%; border:10px solid; margin-right: 20px" align="left">
</td>
<td>
I’ve gathered my polishing components: namely various grits of sandpaper and some car automotive buff.
</td>
</tr>
<tr>
<td>
<img src="https://questionable.quarto.pub/posts/posts/img/resin/PXL_20201008_053345606.MP.jpg" style="width:100%; border:10px solid; margin-right: 20px" align="left">
</td>
<td>
<p>First step is trimming off the sprue. This was done using a pair of shears (I used wirecutters). The ends come off pretty explosively (think nail trimming but times a million) so definitely be careful which direction you are pointing the die and the sprue.</p>
All three have some kind of bubble where resin wasn’t able to really fill the mold. Maybe doing a “swish” after filling will help next time for preventing this?
</td>
</tr>
<tr>
<td>
<img src="https://questionable.quarto.pub/posts/posts/img/resin/PXL_20201008_054320983.MP.jpg" style="width:100%; border:10px solid; margin-right: 20px" align="left">
</td>
<td>
Here we have the before polishing with all the imperfections and remainder of the sprue.
</td>
</tr>
<tr>
<td>
<img src="https://questionable.quarto.pub/posts/posts/img/resin/PXL_20201008_180436917.MP.jpg" style="width:100%; border:10px solid; margin-right: 20px" align="left">
</td>
<td>
<p>And here is our after with all the edges buffed out. Looking better, right? I think we can do better though because I did notice that the sides that came out looking good and shiny after being buffedstarted looking cloudy.</p>
Ideas for next time are to spend more time polishing on the finest grit. Maybe that will help get it super shiny? And spend longer polishing. It’s about time for a netflix marathon anyway.
</td>
</tr>
<tr>
<td>
</td>
<td>
<p style="color:grey; font-style:italic;" align="right">
10/8/2020
</p>
</td>
</tr>
</tbody></table>
<hr>
<table style="width: 100%" border-spacing="5" border-padding="5">
<colgroup>
<col span="1" style="width: 35%;">
<col span="1" style="width: 65%;">
</colgroup>
<tbody><tr>
<td>
<img src="https://questionable.quarto.pub/posts/posts/img/resin/PXL_20201009_010423494.MP.jpg" style="width:100%; border:10px solid; margin-right: 20px" align="left">
</td>
<td>
Very happy to report success with the “swish”. Only 1 out of the three dice has a bubble in the corner disrupting the pattern (and this one is the hardest mold, with the highest point being higher than where the sprue intersects).
</td>
</tr>
<tr>
<td>
</td>
<td>
<p style="color:grey; font-style:italic;" align="right">
10/9/2020
</p>
</td>
</tr>
</tbody></table>
<hr>
</section>
<section id="glitter-dice" class="level3">
<h3 class="anchored" data-anchor-id="glitter-dice">Glitter Dice</h3>
<hr>
<table style="width: 100%" border-spacing="5" border-padding="5">
<colgroup>
<col span="1" style="width: 35%;">
<col span="1" style="width: 65%;">
</colgroup>
<tbody><tr>
<td>
<img src="https://questionable.quarto.pub/posts/posts/img/resin/Dice_glitter_balls.jpg" style="width:100%; border:10px solid; margin-right: 20px" align="left">
</td>
<td>
I’ve been playing with making glitterdice lately. Glitterdice are where there is a sphere of liquid and glitter with a cap (UV curable resin) in the center of the dice (think snow globe). It’s hard to capture on camera but creates some really striking and fun to roll dice.
</td>
</tr>
<tr>
<td>
</td>
<td>
<p style="color:grey; font-style:italic;" align="right">
4/3/2021
</p>
</td>
</tr>
</tbody></table>
<hr>
</section>
<section id="rolling-the-dice" class="level3">
<h3 class="anchored" data-anchor-id="rolling-the-dice">Rolling the Dice</h3>
<p>Now that our unique dice have been cured, painted, and polished it was time to put them to the test. Sure they look pretty (minus the occasional bubble and polish mark) but can they ROLL?</p>
<p>Here, I am proud to present to you, are our candidates for the roll off!</p>
<p><img src="https://questionable.quarto.pub/posts/posts/img/resin/PXL_20201010_033639772.MP.jpg" style="width:100%; border:10px solid; margin-right: 20px" align="center"></p>
<p>Each die was rolled 50 times to give some statistical significance to the results. Ideally we would have a hundred rolls or more per die (1,000 would be a really great number) but I decided to balance statistics with the chances of developing arthritis.</p>
<p>In addition to rolling each of our manufactured dice 50 times a professional metal die was rolled 50 times to give a reference for our measurements.</p>
<p>The conclusion:<br>
Well. Looks like my metal dice is weighted (both literally but also rolls 6 much more often). The resin dice performed better than I expected. I was expected to see the dice with remnants of a bubble or bumps to really have a very significant impact, but honestly they look comparable to the metal die.</p>
<p>Our results:</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"readxl"</span>)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(dplyr)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(plotly)</span>
<span id="cb1-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#library(rjags)</span></span>
<span id="cb1-7"></span>
<span id="cb1-8">rolls <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_excel</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./img/resin/Dice_rolls.xlsx"</span>)</span>
<span id="cb1-9"></span>
<span id="cb1-10">rolls_long <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> rolls <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-11"> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_longer</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cols =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">names_to =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Dice"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values_to =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RollValue"</span>)</span>
<span id="cb1-12"></span>
<span id="cb1-13">rolls_summary <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> rolls_long <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(Dice, RollValue) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarize</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Count =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>())</span>
<span id="cb1-16"></span>
<span id="cb1-17">p <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(rolls_summary, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span>RollValue, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span>Count, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> Dice )) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb1-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_bar</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">stat =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"identity"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">position =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">position_stack</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">reverse =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-19">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> Dice) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-20"> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"top"</span>)</span>
<span id="cb1-21"></span>
<span id="cb1-22">p</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://questionable.quarto.pub/posts/posts/resin_files/figure-html/cars-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">p <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(rolls_summary) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb2-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_bar</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span>Dice, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span>Count, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> RollValue ), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">stat =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"identity"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">position =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">position_stack</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">reverse =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_flip</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb2-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"top"</span>)</span>
<span id="cb2-5"></span>
<span id="cb2-6">p</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://questionable.quarto.pub/posts/posts/resin_files/figure-html/cars-2.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p style="color:grey; font-style:italic;" align="right">
10/10/2020
</p>
</section>
</section>
<section id="resources" class="level2">
<h2 class="anchored" data-anchor-id="resources">Resources</h2>
<p>Here are some of the resources that helped me on my journey down this exciting path (in no particular order):</p>
<ul>
<li><a href="https://www.evewynn.com/moldmaking" class="uri">https://www.evewynn.com/moldmaking</a></li>
<li><a href="http://www.hanleybrady.com/making-dice-part-1-molds/" class="uri">http://www.hanleybrady.com/making-dice-part-1-molds/</a></li>
<li><a href="https://www.instructables.com/Custom-Dice/" class="uri">https://www.instructables.com/Custom-Dice/</a></li>
<li><a href="https://www.thingiverse.com/thing:3795542" class="uri">https://www.thingiverse.com/thing:3795542</a></li>
<li><a href="https://www.youtube.com/watch?v=iRDte2j54F0" class="uri">https://www.youtube.com/watch?v=iRDte2j54F0</a></li>
<li><a href="https://www.reddit.com/r/dice/comments/8zemqn/looking_to_resin_cast_my_own_dice/" class="uri">https://www.reddit.com/r/dice/comments/8zemqn/looking_to_resin_cast_my_own_dice/</a></li>
<li><a href="https://www.youtube.com/watch?v=FQ1A7ZjTsx8" class="uri">https://www.youtube.com/watch?v=FQ1A7ZjTsx8</a></li>
<li><a href="https://rpubs.com/benjamin_chittick/59278" class="uri">https://rpubs.com/benjamin_chittick/59278</a></li>
<li><a href="https://rstudio-education.github.io/hopr/project-1-weighted-dice.html" class="uri">https://rstudio-education.github.io/hopr/project-1-weighted-dice.html</a></li>
<li><a href="http://ditraglia.com/Econ103Public/Rtutorials/Rtutorial4.html" class="uri">http://ditraglia.com/Econ103Public/Rtutorials/Rtutorial4.html</a></li>
<li><a href="https://dk81.github.io/dkmathstats_site/rvisual-bargraphs.html" class="uri">https://dk81.github.io/dkmathstats_site/rvisual-bargraphs.html</a></li>
<li><a href="https://cran.r-project.org/web/packages/tidydice/vignettes/tidydice.html" class="uri">https://cran.r-project.org/web/packages/tidydice/vignettes/tidydice.html</a></li>
<li><a href="https://quarto.org/docs/authoring/figures.html#figure-panels" class="uri">https://quarto.org/docs/authoring/figures.html#figure-panels</a></li>
</ul>


</section>

 ]]></description>
  <category>datascience</category>
  <category>dice</category>
  <category>games</category>
  <guid>https://questionable.quarto.pub/posts/posts/resin.html</guid>
  <pubDate>Sun, 04 Apr 2021 06:00:00 GMT</pubDate>
  <media:content url="https://questionable.quarto.pub/posts/posts/img/resin/PXL_20201008_180539533.MP.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>BATTLEBOTS 2021</title>
  <dc:creator>Lisa </dc:creator>
  <link>https://questionable.quarto.pub/posts/posts/battlebots 2021.html</link>
  <description><![CDATA[ 





<section id="what-is-battlebots" class="level2">
<h2 class="anchored" data-anchor-id="what-is-battlebots">What is Battlebots?</h2>
<p>BattleBots is a robotic combat TV show. It is an amazing community and clearly a hobby of love by the people that join the show. Robots weigh 250lbs, 500 lbs in special circumstances, and there are strict rules around what is and isn’t allowed for weapons. The show spends time both on the 3 minute match and behind the scenes with interviews with the builders, footage of repairs, and last minute modifications as teams compete for the ultimate trophy.</p>
<section id="about-battlebots" class="level3">
<h3 class="anchored" data-anchor-id="about-battlebots">About Battlebots</h3>
<ul>
<li><a href="https://battlebots.com/">Official BattleBots page</a></li>
<li><a href="http://reddit.com/r/battlebots">Reddit Battlebots</a></li>
<li><a href="https://www.reddit.com/r/battlebots/comments/grst5y/the_battlebots_season_5_rumor_mill/">Season 5 Rumor Mill at Reddit/r/Battlebots</a></li>
<li><a href="https://docs.google.com/document/d/1tXSzwzEM2jNGjZ2KYn00ldeHvEru0y3_zlNkVw-F9iI/edit#heading=h.1wa7o4efnhdl">Combat Robot Resource Guide by Robert Cowan</a></li>
</ul>
</section>
<section id="best-fight-videos" class="level3">
<h3 class="anchored" data-anchor-id="best-fight-videos">Best Fight Videos</h3>
<p>All rights are owned by Battlebots on ABC</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-1-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-1" aria-controls="tabset-1-1" aria-selected="true">Minotaur vs.&nbsp;Bombshell</a></li><li class="nav-item"><a class="nav-link" id="tabset-1-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-2" aria-controls="tabset-1-2" aria-selected="false">Yeti vs.&nbsp;Lock Jaw</a></li><li class="nav-item"><a class="nav-link" id="tabset-1-3-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-3" aria-controls="tabset-1-3" aria-selected="false">Tombstone vs.&nbsp;Bronco</a></li><li class="nav-item"><a class="nav-link" id="tabset-1-4-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-4" aria-controls="tabset-1-4" aria-selected="false">Hypershock + Rake</a></li><li class="nav-item"><a class="nav-link" id="tabset-1-5-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-5" aria-controls="tabset-1-5" aria-selected="false">Death Roll vs.&nbsp;End Game</a></li><li class="nav-item"><a class="nav-link" id="tabset-1-6-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-6" aria-controls="tabset-1-6" aria-selected="false">HUGE vs.&nbsp;Bronco</a></li><li class="nav-item"><a class="nav-link" id="tabset-1-7-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-7" aria-controls="tabset-1-7" aria-selected="false">Witch Doctor Vs. actual household items</a></li></ul>
<div class="tab-content">
<div id="tabset-1-1" class="tab-pane active" aria-labelledby="tabset-1-1-tab">
<iframe width="560" height="315" src="https://www.youtube.com/embed/89LYj3d1jCw" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="">
</iframe>
</div>
<div id="tabset-1-2" class="tab-pane" aria-labelledby="tabset-1-2-tab">
<iframe width="560" height="315" src="https://www.youtube.com/embed/AqM8zxjfV1M" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="">
</iframe>
</div>
<div id="tabset-1-3" class="tab-pane" aria-labelledby="tabset-1-3-tab">
<iframe width="560" height="315" src="https://www.youtube.com/embed/X2vSMMXmGdg" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="">
</iframe>
</div>
<div id="tabset-1-4" class="tab-pane" aria-labelledby="tabset-1-4-tab">
<iframe width="560" height="315" src="https://www.youtube.com/embed/UNk5-3fGNqI" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="">
</iframe>
</div>
<div id="tabset-1-5" class="tab-pane" aria-labelledby="tabset-1-5-tab">
<iframe width="560" height="315" src="https://www.youtube.com/embed/RrA1XCtUs8I" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="">
</iframe>
</div>
<div id="tabset-1-6" class="tab-pane" aria-labelledby="tabset-1-6-tab">
<iframe width="560" height="315" src="https://www.youtube.com/embed/jJRskcggTnI" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="">
</iframe>
</div>
<div id="tabset-1-7" class="tab-pane" aria-labelledby="tabset-1-7-tab">
<iframe width="560" height="315" src="https://www.youtube.com/embed/DZLs52pRQis" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="">
</iframe>
</div>
</div>
</div>
</section>
</section>
<section id="battlebots-analysis" class="level2">
<h2 class="anchored" data-anchor-id="battlebots-analysis">Battlebots Analysis</h2>
<p>Below is my attempt at diving deep into the world of Battlebots to understand what makes some bots more successful than others. All data is from the Battlebots official website, scraped from the web using the Rvest R package developed by Hadley Wickam.</p>
<section id="messy-web-scraping-to-get-data" class="level3">
<h3 class="anchored" data-anchor-id="messy-web-scraping-to-get-data">Messy web scraping to get data</h3>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(rvest)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(dplyr)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(plotly)</span>
<span id="cb1-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(data.table)</span>
<span id="cb1-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(stringr)</span>
<span id="cb1-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#devtools::install_github("lchiffon/wordcloud2")</span></span>
<span id="cb1-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(wordcloud2)</span>
<span id="cb1-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(RColorBrewer)</span>
<span id="cb1-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggmap)</span>
<span id="cb1-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(maps)</span>
<span id="cb1-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggrepel)</span>
<span id="cb1-14"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(sf)</span>
<span id="cb1-15"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rnaturalearth"</span>)</span>
<span id="cb1-16"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rnaturalearthdata"</span>)</span>
<span id="cb1-17"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(htmlwidgets)</span>
<span id="cb1-18"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(webshot)</span>
<span id="cb1-19"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidygeocoder)</span>
<span id="cb1-20"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(rgeos)</span>
<span id="cb1-21"></span>
<span id="cb1-22"></span>
<span id="cb1-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set URL list</span></span>
<span id="cb1-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#urls = c("https://battlebots.com/robot/yeti-2019/")</span></span>
<span id="cb1-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#url &lt;- "https://battlebots.com/robot/yeti-2019/"</span></span>
<span id="cb1-26"></span>
<span id="cb1-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check if data already exists, if not download it</span></span>
<span id="cb1-28"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.exists</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./files/battlebotsinfo.csv"</span>)){</span>
<span id="cb1-29">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">message</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Loading saved files"</span>)</span>
<span id="cb1-30">  </span>
<span id="cb1-31">  battlebotsinfo <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read.csv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./files/battlebotsinfo.csv"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">stringsAsFactors=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span>
<span id="cb1-32">  battlebotsmatch <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read.csv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./files/battlebotsmatch.csv"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">stringsAsFactors=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span>
<span id="cb1-33">  battlebotsstat <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read.csv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./files/battlebotsstat.csv"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">stringsAsFactors=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span>
<span id="cb1-34">  </span>
<span id="cb1-35">} <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> {</span>
<span id="cb1-36">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">message</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Generating battlebots data files"</span>)</span>
<span id="cb1-37">  </span>
<span id="cb1-38">  urls <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read.csv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./files/battlebotsurls.csv"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">stringsAsFactors=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span>
<span id="cb1-39">  </span>
<span id="cb1-40">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span>( i <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(urls) ){</span>
<span id="cb1-41">    url <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> urls[i,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb1-42">    </span>
<span id="cb1-43">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Reading "</span>, i, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" of "</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(urls), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">": "</span>, url))</span>
<span id="cb1-44">    </span>
<span id="cb1-45">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Read info and arrange into table </span></span>
<span id="cb1-46">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># (note that this isn't actually a table in the html source so we had to jump through some hoops to make that happen)</span></span>
<span id="cb1-47">    info <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_html</span>(url) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-48">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">html_nodes</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".info-grid"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-49">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">html_text</span>()</span>
<span id="cb1-50">    </span>
<span id="cb1-51">    info_df_tmp <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map</span>(info, <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(x) {</span>
<span id="cb1-52">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">text =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unlist</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_split</span>(x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pattern =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">n"</span>))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-53">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rowid_to_column</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">var =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"line"</span>)</span>
<span id="cb1-54">    })</span>
<span id="cb1-55">    </span>
<span id="cb1-56">    info_df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_rows</span>(info_df_tmp, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.id =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"page"</span>) </span>
<span id="cb1-57">    </span>
<span id="cb1-58">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Trim off leading whitespace</span></span>
<span id="cb1-59">    info_trim <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">slice</span>(info_df, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">which.max</span>(text <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Robot:"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>()) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-60">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(text)</span>
<span id="cb1-61">    </span>
<span id="cb1-62">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Split into multiple rows , remediate any cases where Values are part of the Record</span></span>
<span id="cb1-63">    info_split <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> info_trim <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-64">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">text =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_trim</span>(text)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-65">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Record =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grepl</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">":"</span>, text, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fixed =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>), text, <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-66">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">separate</span>(Record, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">into =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Record"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Value"</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sep =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">":"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">remove =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-67">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fill</span>(Record) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-68">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Value =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(Value), </span>
<span id="cb1-69">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grepl</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">":"</span>, text, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fixed =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>), <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>, text), Value )) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-70">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(Record, Value) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-71">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(Value)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-72">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grepl</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"^</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">s*$"</span>, Value)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-73">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-74">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(Record) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-75">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarize</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Value =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(Value, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">collapse =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">", "</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-76">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ungroup</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-77">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_wider</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">names_from =</span> Record, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values_from =</span> Value) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-78">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate_all</span>(as.character)</span>
<span id="cb1-79">    </span>
<span id="cb1-80">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Robot name </span></span>
<span id="cb1-81">    robot <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> info_split<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Robot</span>
<span id="cb1-82">    </span>
<span id="cb1-83">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Read both history tables and wrangle into table form</span></span>
<span id="cb1-84">    history <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_html</span>(url) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-85">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">html_nodes</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".igsv-table"</span>) </span>
<span id="cb1-86">    </span>
<span id="cb1-87">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(history) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>){</span>
<span id="cb1-88">    stat_history <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> history[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">html_table</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">header =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb1-89">    stat_history_df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> stat_history[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-90">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Robot =</span> robot) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-91">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate_all</span>(as.character)</span>
<span id="cb1-92">    }</span>
<span id="cb1-93">    </span>
<span id="cb1-94">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(history) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>){</span>
<span id="cb1-95">      match_history <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> history[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">html_table</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">header =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb1-96">      match_history_df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> match_history[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-97">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Robot =</span> robot) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-98">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate_all</span>(as.character)</span>
<span id="cb1-99">    }</span>
<span id="cb1-100">    </span>
<span id="cb1-101">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Compile</span></span>
<span id="cb1-102">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span>(i<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>){</span>
<span id="cb1-103">      battlebotsinfo <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> info_split</span>
<span id="cb1-104">      battlebotsmatch <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> match_history_df</span>
<span id="cb1-105">      battlebotsstat <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> stat_history_df</span>
<span id="cb1-106">    } <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> {</span>
<span id="cb1-107">      battlebotsinfo <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_rows</span>(battlebotsinfo, info_split)</span>
<span id="cb1-108">      </span>
<span id="cb1-109">      <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(history) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>){</span>
<span id="cb1-110">        battlebotsstat <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_rows</span>(battlebotsstat, stat_history_df)</span>
<span id="cb1-111">      }</span>
<span id="cb1-112">      </span>
<span id="cb1-113">      <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(history) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>){</span>
<span id="cb1-114">        battlebotsmatch <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_rows</span>(battlebotsmatch, match_history_df)</span>
<span id="cb1-115">      }</span>
<span id="cb1-116">      </span>
<span id="cb1-117">    }</span>
<span id="cb1-118">    </span>
<span id="cb1-119">  } <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># End for loop </span></span>
<span id="cb1-120">  </span>
<span id="cb1-121">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Save files to make it easier next time</span></span>
<span id="cb1-122">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">write.csv</span>(battlebotsinfo, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./files/battlebotsinfo.csv"</span>)</span>
<span id="cb1-123">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">write.csv</span>(battlebotsmatch, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./files/battlebotsmatch.csv"</span>)</span>
<span id="cb1-124">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">write.csv</span>(battlebotsstat, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./files/battlebotsstat.csv"</span>)</span>
<span id="cb1-125"></span>
<span id="cb1-126">}</span>
<span id="cb1-127"></span>
<span id="cb1-128"></span>
<span id="cb1-129"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># References:</span></span>
<span id="cb1-130"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># https://community.rstudio.com/t/convert-character-string-into-table/9158</span></span>
<span id="cb1-131"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># https://stackoverflow.com/questions/42419765/convert-one-column-into-a-new-column-every-5-rows-a-numeric-interval</span></span>
<span id="cb1-132"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#  - [Scraping in R rvest](https://www.dataquest.io/blog/web-scraping-in-r-rvest/)</span></span>
<span id="cb1-133"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#  - [Tidy Web Scraping in R Tutorial and Resources](https://towardsdatascience.com/tidy-web-scraping-in-r-tutorial-and-resources-ac9f72b4fe47)</span></span></code></pre></div>
</details>
</div>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">### Frequency of Battlebots Weapon Types</span></span>
<span id="cb2-2"></span>
<span id="cb2-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># type_frequency &lt;- battlebotsinfo %&gt;%</span></span>
<span id="cb2-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   group_by(Type) %&gt;%</span></span>
<span id="cb2-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   summarize(freq = n()) %&gt;%</span></span>
<span id="cb2-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   rename("word" = "Type")</span></span>
<span id="cb2-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   </span></span>
<span id="cb2-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># my_wordcloud1 &lt;- wordcloud2(data=type_frequency, size = 0.5, shape = 'pentagon', color='random-dark')</span></span>
<span id="cb2-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># </span></span>
<span id="cb2-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># my_wordcloud1</span></span>
<span id="cb2-11"></span>
<span id="cb2-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#saveWidget(my_wordcloud, "tmp.html", selfcontained = F)</span></span>
<span id="cb2-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#webshot("tmp.html", "./images/wc1.png", delay = 5)</span></span>
<span id="cb2-14"></span>
<span id="cb2-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#wordcloud2(demoFreq, color = "random-light", backgroundColor = "grey")</span></span>
<span id="cb2-16"></span>
<span id="cb2-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># https://towardsdatascience.com/create-a-word-cloud-with-r-bde3e7422e8a</span></span>
<span id="cb2-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># https://cran.r-project.org/web/packages/wordcloud2/vignettes/wordcloud.html#lettercloud-function</span></span></code></pre></div>
</details>
</div>
</section>
<section id="frequency-of-builder-day-jobs" class="level3">
<h3 class="anchored" data-anchor-id="frequency-of-builder-day-jobs">Frequency of Builder Day Jobs</h3>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">job_frequency <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> battlebotsinfo <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(Job) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarize</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">freq =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>()) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rename</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"word"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Job"</span>)</span>
<span id="cb3-5"></span>
<span id="cb3-6">job_frequency<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>word <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">iconv</span>(job_frequency<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>word, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">to =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"UTF-8"</span>)</span>
<span id="cb3-7"></span>
<span id="cb3-8">my_wordcloud2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">wordcloud2</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data=</span>job_frequency, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.25</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'random-dark'</span>)</span>
<span id="cb3-9"></span>
<span id="cb3-10">my_wordcloud2</span></code></pre></div>
</details>
<div class="cell-output-display">
<div class="wordcloud2 html-widget html-fill-item" id="htmlwidget-9d1b24ebd1cc8d1e18c8" style="width:100%;height:464px;"></div>
<script type="application/json" data-for="htmlwidget-9d1b24ebd1cc8d1e18c8">{"x":{"word":["3D Wizard","Architectural Draftsman","Attorney in the Intellectual Property Litigation Practice Group at Alston & Bird","Bugglebots Producer and host","Builder","Builder and driver","Builder/Driver","CEO","CTO at Double Robotics","Circus Clown","Creative Engineer","Design Specialist at the Jacobs Institute for Design Innovation, UC Berkeley","Design, Build, Manage, Drive!","Design, Fabricator and Pilot","Designer and machinist","Designer, Builder, Driver","Designer, Builder, and Driver","Designer, Driver","Designer, builder","Designer, builder and driver","Designer/builder","Driver, Organizer","Driver, electrical, pneumatics, welding, design, and social media","Driver, minister of disinformation",null,"Electro-Mechanical Technician","Embedded Software Engineer","Engineer","Engineer at Westar LLC","Engineering Apprentice","Engineering student","Entrepreneur","Execute the awesomeness.","Fabricator, Driver","Founder, CEO of Domovi","Freelance mechanical design engineer","Fuzzy lives on a ranch in Texas where he raises cows, modifies Jeeps, and builds fighting robots.","Hardware Engineer","Hydrographic Surveyor","Independent Consultant","Inventor","Inventor, Maker, Student, Dentist","Jeans Model","Lead Mechanical Engineer at Moog Space and Defense.","Lecturer","M.E. Student","Mech Engineering Student","Mechanical Design Engineer","Mechanical Designer / Robotics Engineer","Mechanical Engineer","Mechanical Specialist / Mechanical Engineer","Medical Device R&D Engineer","Medical device engineer","Modelmaker","Navy Diver","Owner, Operator","President of Bot Bash Parties","Principal Mechanical Engineer at frog","Process Engineer","Professor of Engineering, Mt. San Antonio College","Professor of Mechanical Engineering at PUC-Rio (Pontifical Catholic University of Rio de Janeiro)","QA Test Analyst (Video Games)","R&D Engineer","Research Engineer","Retired Computer Scientist","Retired Electrical Engineer","Robot Design, coordination of build, design, fabrication, funding","Robot Doctor","Robotics Engineer","Robotics Engineer. Sean designs military EoD robots for Harris Corporation. These robots are used in theater to save human life by identifying, neutralizing, and removing IEDs.","Rocket Scientist (Engineer)","Senior Engineering Technician at Meggitt Airframe Systems","Software Engineer","Software Engineer and Mechatronics Engineer","Student","Tank mechanic","Teacher","Technology Sales and Marketing","Undergraduate Student","User Experience Researcher","WaterJet Coordinator","Weapons/Electronics"],"freq":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,4,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1],"fontFamily":"Segoe UI","fontWeight":"bold","color":"random-dark","minSize":0,"weightFactor":9,"backgroundColor":"white","gridSize":0,"minRotation":-0.7853981633974483,"maxRotation":0.7853981633974483,"shuffle":true,"rotateRatio":0.4,"shape":"circle","ellipticity":0.65,"figBase64":null,"hover":null},"evals":[],"jsHooks":{"render":[{"code":"function(el,x){\n                        console.log(123);\n                        if(!iii){\n                          window.location.reload();\n                          iii = False;\n\n                        }\n  }","data":null}]}}</script>
</div>
</div>
</section>
<section id="map-of-builder-locations" class="level3">
<h3 class="anchored" data-anchor-id="map-of-builder-locations">Map of Builder Locations</h3>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#Load location data</span></span>
<span id="cb4-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.exists</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./files/battlebotslocation.csv"</span>)){</span>
<span id="cb4-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">message</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Loading saved files"</span>)</span>
<span id="cb4-4">  </span>
<span id="cb4-5">  bbmap <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read.csv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./files/battlebotslocation.csv"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">stringsAsFactors=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span>
<span id="cb4-6">} <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> {</span>
<span id="cb4-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">message</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Generating battlebots location files"</span>)</span>
<span id="cb4-8">  </span>
<span id="cb4-9">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#Set up the API key for google </span></span>
<span id="cb4-10">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#This now costs money</span></span>
<span id="cb4-11">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#Go to: https://cloud.google.com/maps-platform/</span></span>
<span id="cb4-12">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#register_google(key = "", write = TRUE)</span></span>
<span id="cb4-13">  </span>
<span id="cb4-14">  bbmap <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> battlebotsinfo <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb4-15">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(Robot, Hometown) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb4-16">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Team =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Team"</span>, Robot, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">", from"</span>, Hometown)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb4-17">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate_geocode</span>(Hometown)</span>
<span id="cb4-18">  </span>
<span id="cb4-19">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">write.csv</span>(bbmap, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./files/battlebotslocation.csv"</span>)</span>
<span id="cb4-20">}</span>
<span id="cb4-21">  </span>
<span id="cb4-22">world <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ne_countries</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">scale =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"medium"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">returnclass =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sf"</span>)</span>
<span id="cb4-23"></span>
<span id="cb4-24">p <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> world) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb4-25">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_sf</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lightgray"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-26">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">xlab</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Longitude"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ylab</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Latitude"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-27">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>( <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data=</span>bbmap, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span>lon, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span>lat, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">text=</span>Team), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-28">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ggrepel::geom_label_repel(data = bbmap,</span></span>
<span id="cb4-29">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#            aes(x = lon, y = lat, label = Robot),</span></span>
<span id="cb4-30">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#            size = 1.5, alpha = 0.8,</span></span>
<span id="cb4-31">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#            label.r = unit(0.5, "lines"), label.size = 0.25,</span></span>
<span id="cb4-32">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#            segment.color = "red", segment.size = 1,</span></span>
<span id="cb4-33">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#            seed = 1002) +</span></span>
<span id="cb4-34">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#geom_text_repel(data=bbmap,aes(x = lon, y = lat, label = Robot),box.padding = 0.4,point.padding = 0.25,size=4,show.legend=FALSE)+</span></span>
<span id="cb4-35">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggtitle</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Battlebots Hometowns World map"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">subtitle =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"("</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>(bbmap<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Robot)), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" teams)"</span>))</span>
<span id="cb4-36"></span>
<span id="cb4-37"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#pp &lt;- ggplotly(p, tooltip="text")</span></span>
<span id="cb4-38"></span>
<span id="cb4-39"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#assign("pp", plotly::ggplotly(p, tooltip="text"), envir=parent.frame())</span></span>
<span id="cb4-40"></span>
<span id="cb4-41"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#pp</span></span>
<span id="cb4-42"></span>
<span id="cb4-43">p</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://questionable.quarto.pub/posts/posts/battlebots-2021_files/figure-html/unnamed-chunk-4-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#htmlwidgets::saveWidget( plotly::ggplotly(p, tooltip="text"), "tmp3.html")</span></span>
<span id="cb5-2"></span>
<span id="cb5-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#print( htmltools::tags$iframe(src="temp.html", width=640, height=480) )</span></span>
<span id="cb5-4"></span>
<span id="cb5-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># &lt;iframe src="temp.html" width='1000px' height='800px'&gt;&lt;/iframe&gt; </span></span>
<span id="cb5-6"></span>
<span id="cb5-7">  </span>
<span id="cb5-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#https://stackoverflow.com/questions/29037851/how-do-i-plot-us-cities-using-ggplot</span></span>
<span id="cb5-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#https://stackoverflow.com/questions/22752009/plot-on-ggmap-by-using-city-and-state</span></span>
<span id="cb5-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#https://towardsdatascience.com/plotting-spatial-data-in-r-a38a405a07f1</span></span>
<span id="cb5-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#https://cran.r-project.org/web/packages/usmap/vignettes/advanced-mapping.html </span></span>
<span id="cb5-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#https://www.r-graph-gallery.com/330-bubble-map-with-ggplot2.html</span></span>
<span id="cb5-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#https://ggplot2-book.org/maps.html</span></span>
<span id="cb5-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#http://yluo86.github.io/rmaps</span></span>
<span id="cb5-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#https://www.r-spatial.org/r/2018/10/25/ggplot2-sf.html</span></span>
<span id="cb5-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#https://www.statsandr.com/blog/world-map-of-visited-countries-in-r/</span></span>
<span id="cb5-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#https://cran.r-project.org/web/packages/tidygeocoder/vignettes/tidygeocoder.html</span></span>
<span id="cb5-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#https://towardsdatascience.com/reverse-geocoding-in-r-f7fe4b908355</span></span>
<span id="cb5-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#https://stackoverflow.com/questions/13905098/how-to-get-the-longitude-and-latitude-coordinates-from-a-city-name-and-country-i</span></span>
<span id="cb5-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#https://stackoverflow.com/questions/59144842/why-does-ggplotly-does-not-work-in-rmarkdown-the-same-way-ggplot-does</span></span></code></pre></div>
</details>
</div>
<p><br></p>
</section>
<section id="win-frequency-by-robot-type" class="level3">
<h3 class="anchored" data-anchor-id="win-frequency-by-robot-type">Win Frequency by Robot Type</h3>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#TODO: Add plot showing frequency of type of robot </span></span>
<span id="cb6-2"></span>
<span id="cb6-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># type_frequency &lt;- battlebotsinfo %&gt;%</span></span>
<span id="cb6-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   group_by(Type) %&gt;%</span></span>
<span id="cb6-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   summarize(freq = n()) %&gt;%</span></span>
<span id="cb6-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   rename("word" = "Type")</span></span>
<span id="cb6-7"></span>
<span id="cb6-8">win_frequency_raw <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">merge</span>(battlebotsinfo, battlebotsstat, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Robot"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb6-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(Stats, Career, Robot, Type) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb6-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(Stats <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Total matches"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Total wins"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb6-11">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#mutate(Career = as.numeric(Stats)) %&gt;%</span></span>
<span id="cb6-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_wider</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">names_from =</span> Stats, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values_from =</span> Career) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb6-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unnest</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Total wins</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb6-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Total wins</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.numeric</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Total wins</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>),</span>
<span id="cb6-15">         <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Total matches</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.numeric</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Total matches</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>))</span>
<span id="cb6-16"></span>
<span id="cb6-17">type_wins <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> win_frequency_raw <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb6-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(Type) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb6-19">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarize</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">wins =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Total wins</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Total matches</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>))</span>
<span id="cb6-20"></span>
<span id="cb6-21">robot_wins <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> win_frequency_raw <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb6-22">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(Type) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb6-23">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">CountType =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>()) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb6-24">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ungroup</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb6-25">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(Robot, Type, CountType) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb6-26">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarize</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">wins =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Total wins</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Total matches</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb6-27">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(CountType <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb6-28">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrange</span>(wins)</span>
<span id="cb6-29"></span>
<span id="cb6-30"></span>
<span id="cb6-31"></span>
<span id="cb6-32">p <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(robot_wins, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span>Type, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span>wins)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_boxplot</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.text.x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">angle =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hjust =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))</span>
<span id="cb6-33"></span>
<span id="cb6-34"></span>
<span id="cb6-35">p <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(robot_wins, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reorder</span>(Type, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>wins, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span>wins)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_boxplot</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.text.x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">angle =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hjust =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Wins"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Type"</span>)</span>
<span id="cb6-36">p</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://questionable.quarto.pub/posts/posts/battlebots-2021_files/figure-html/unnamed-chunk-5-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
</section>
</section>
<section id="resources" class="level2">
<h2 class="anchored" data-anchor-id="resources">Resources</h2>
<p>Battlebots:</p>
<ul>
<li><a href="https://battlebots.com/">Official BattleBots page</a></li>
<li><a href="http://reddit.com/r/battlebots">Reddit Battlebots</a></li>
<li><a href="https://www.reddit.com/r/battlebots/comments/grst5y/the_battlebots_season_5_rumor_mill/">Season 5 Rumor Mill at Reddit/r/Battlebots</a></li>
<li><a href="https://docs.google.com/document/d/1tXSzwzEM2jNGjZ2KYn00ldeHvEru0y3_zlNkVw-F9iI/edit#heading=h.1wa7o4efnhdl">Combat Robot Resource Guide by Robert Cowan</a></li>
</ul>
<p>Resources for building a similar RMarkdown page:</p>
<ul>
<li><a href="https://stackoverflow.com/questions/42631642/creating-dynamic-tabs-in-rmarkdown">Creating dynamic tabs in Rmarkdown</a></li>
<li><a href="https://cran.r-project.org/web/packages/stationery/vignettes/HTML_special_features.html">HTML Special Features: KU CRMDA Markdown</a></li>
<li>https://github.com/rstudio/rmarkdown/issues/1681</li>
<li><a href="https://stackoverflow.com/questions/58837184/r-2-column-layout-in-rmarkdown-with-tabset">R: 2 column layout in Rmarkdown with tabset</a></li>
<li><a href="https://www.dataquest.io/blog/web-scraping-in-r-rvest/">Scraping in R rvest</a></li>
<li><a href="https://towardsdatascience.com/tidy-web-scraping-in-r-tutorial-and-resources-ac9f72b4fe47">Tidy Web Scraping in R Tutorial and Resources</a></li>
</ul>


</section>

 ]]></description>
  <category>datascience</category>
  <guid>https://questionable.quarto.pub/posts/posts/battlebots 2021.html</guid>
  <pubDate>Mon, 04 Jan 2021 07:00:00 GMT</pubDate>
  <media:content url="https://questionable.quarto.pub/posts/posts/img/bb/BB.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Blog posts, projects, and random musings</title>
  <link>https://questionable.quarto.pub/posts/</link>
  <description><![CDATA[ 





<p>Here’s some random thoughts and project pages, all brought to you by Quarto’s blogging capability.</p>




<div class="quarto-listing quarto-listing-container-default" id="listing-listing">
<div class="list quarto-listing-default">
<div class="quarto-post image-right" data-index="0" data-categories="code,games" data-listing-date-sort="1751695200000" data-listing-file-modified-sort="1751755106844" data-listing-date-modified-sort="NaN" data-listing-reading-time-sort="1" data-listing-word-count-sort="58">
<div class="thumbnail">
<p><a href="./posts/bus-jump.html" class="no-external"></a></p><a href="./posts/bus-jump.html" class="no-external">
<p><img src="https://questionable.quarto.pub/posts/posts/img/bus-jump.png" class="thumbnail-image"></p>
</a><p><a href="./posts/bus-jump.html" class="no-external"></a></p>
</div>
<div class="body">
<h3 class="no-anchor listing-title">
<a href="./posts/bus-jump.html" class="no-external">Using LLM’s to make a jump game</a>
</h3>
<div class="listing-subtitle">
<a href="./posts/bus-jump.html" class="no-external"></a>
</div>
</div>
<div class="metadata">
<a href="./posts/bus-jump.html" class="no-external">
<div class="listing-date">
Jul 5, 2025
</div>
<div class="listing-author">
Lisa
</div>
<div class="listing-reading-time">
1 min
</div>
</a>
</div>
</div>
<div class="quarto-post image-right" data-index="1" data-categories="code,dice,games" data-listing-date-sort="1751695200000" data-listing-file-modified-sort="1751754758896" data-listing-date-modified-sort="NaN" data-listing-reading-time-sort="9" data-listing-word-count-sort="1740">
<div class="thumbnail">
<p><a href="./posts/dice-roller.html" class="no-external"></a></p><a href="./posts/dice-roller.html" class="no-external">
<p><img src="https://questionable.quarto.pub/posts/posts/img/dice-roller.png" class="thumbnail-image"></p>
</a><p><a href="./posts/dice-roller.html" class="no-external"></a></p>
</div>
<div class="body">
<h3 class="no-anchor listing-title">
<a href="./posts/dice-roller.html" class="no-external">Using LLM’s to make a dice roller</a>
</h3>
<div class="listing-subtitle">
<a href="./posts/dice-roller.html" class="no-external"></a>
</div>
</div>
<div class="metadata">
<a href="./posts/dice-roller.html" class="no-external">
<div class="listing-date">
Jul 5, 2025
</div>
<div class="listing-author">
Lisa
</div>
<div class="listing-reading-time">
9 min
</div>
</a>
</div>
</div>
<div class="quarto-post image-right" data-index="2" data-categories="code,games" data-listing-date-sort="1751695200000" data-listing-file-modified-sort="1751757981614" data-listing-date-modified-sort="NaN" data-listing-reading-time-sort="2" data-listing-word-count-sort="373">
<div class="thumbnail">
<p><a href="./posts/text-adventure-space.html" class="no-external"></a></p><a href="./posts/text-adventure-space.html" class="no-external">
<p><img src="https://questionable.quarto.pub/posts/posts/img/text-adventure-space.png" class="thumbnail-image"></p>
</a><p><a href="./posts/text-adventure-space.html" class="no-external"></a></p>
</div>
<div class="body">
<h3 class="no-anchor listing-title">
<a href="./posts/text-adventure-space.html" class="no-external">Using LLM’s to make a text adventure</a>
</h3>
<div class="listing-subtitle">
<a href="./posts/text-adventure-space.html" class="no-external"></a>
</div>
</div>
<div class="metadata">
<a href="./posts/text-adventure-space.html" class="no-external">
<div class="listing-date">
Jul 5, 2025
</div>
<div class="listing-author">
Lisa
</div>
<div class="listing-reading-time">
2 min
</div>
</a>
</div>
</div>
<div class="quarto-post image-right" data-index="3" data-categories="hardware,code" data-listing-date-sort="1714543200000" data-listing-file-modified-sort="1714582297527" data-listing-date-modified-sort="NaN" data-listing-reading-time-sort="2" data-listing-word-count-sort="317">
<div class="thumbnail">
<p><a href="./posts/kettle automation.html" class="no-external"></a></p><a href="./posts/kettle automation.html" class="no-external">
<p><img src="https://questionable.quarto.pub/posts/posts/img/home-automation.png" class="thumbnail-image"></p>
</a><p><a href="./posts/kettle automation.html" class="no-external"></a></p>
</div>
<div class="body">
<h3 class="no-anchor listing-title">
<a href="./posts/kettle automation.html" class="no-external">Hey Google - make me coffee!</a>
</h3>
<div class="listing-subtitle">
<a href="./posts/kettle automation.html" class="no-external"></a>
</div>
</div>
<div class="metadata">
<a href="./posts/kettle automation.html" class="no-external">
<div class="listing-date">
May 1, 2024
</div>
<div class="listing-author">
Lisa
</div>
<div class="listing-reading-time">
2 min
</div>
</a>
</div>
</div>
<div class="quarto-post image-right" data-index="4" data-categories="laser-cutting,maverick-mods" data-listing-date-sort="1696485600000" data-listing-file-modified-sort="1696530583355" data-listing-date-modified-sort="NaN" data-listing-reading-time-sort="2" data-listing-word-count-sort="202">
<div class="thumbnail">
<p><a href="./posts/maverick cubby holder.html" class="no-external"></a></p><a href="./posts/maverick cubby holder.html" class="no-external">
<p><img src="https://questionable.quarto.pub/posts/posts/img/cubby-holder.jpg" class="thumbnail-image"></p>
</a><p><a href="./posts/maverick cubby holder.html" class="no-external"></a></p>
</div>
<div class="body">
<h3 class="no-anchor listing-title">
<a href="./posts/maverick cubby holder.html" class="no-external">Ford Maverick Truck Cubby Holder</a>
</h3>
<div class="listing-subtitle">
<a href="./posts/maverick cubby holder.html" class="no-external"></a>
</div>
</div>
<div class="metadata">
<a href="./posts/maverick cubby holder.html" class="no-external">
<div class="listing-date">
Oct 5, 2023
</div>
<div class="listing-author">
Lisa
</div>
<div class="listing-reading-time">
2 min
</div>
</a>
</div>
</div>
<div class="quarto-post image-right" data-index="5" data-categories="rockets" data-listing-date-sort="1691301600000" data-listing-file-modified-sort="1713567053274" data-listing-date-modified-sort="NaN" data-listing-reading-time-sort="1" data-listing-word-count-sort="69">
<div class="thumbnail">
<p><a href="./posts/vortico rockets.html" class="no-external"></a></p><a href="./posts/vortico rockets.html" class="no-external">
<p><img src="https://questionable.quarto.pub/posts/posts/img/vortico.jpg" class="thumbnail-image"></p>
</a><p><a href="./posts/vortico rockets.html" class="no-external"></a></p>
</div>
<div class="body">
<h3 class="no-anchor listing-title">
<a href="./posts/vortico rockets.html" class="no-external">Vortico rockets</a>
</h3>
<div class="listing-subtitle">
<a href="./posts/vortico rockets.html" class="no-external"></a>
</div>
</div>
<div class="metadata">
<a href="./posts/vortico rockets.html" class="no-external">
<div class="listing-date">
Aug 6, 2023
</div>
<div class="listing-author">
Lisa
</div>
<div class="listing-reading-time">
1 min
</div>
</a>
</div>
</div>
<div class="quarto-post image-right" data-index="6" data-categories="maverick-mods" data-listing-date-sort="1683352800000" data-listing-file-modified-sort="1713566902522" data-listing-date-modified-sort="NaN" data-listing-reading-time-sort="1" data-listing-word-count-sort="78">
<div class="thumbnail">
<p><a href="./posts/maverick soft topper.html" class="no-external"></a></p><a href="./posts/maverick soft topper.html" class="no-external">
<p><img src="https://questionable.quarto.pub/posts/posts/img/maverick_softtopper 3.jpg" class="thumbnail-image"></p>
</a><p><a href="./posts/maverick soft topper.html" class="no-external"></a></p>
</div>
<div class="body">
<h3 class="no-anchor listing-title">
<a href="./posts/maverick soft topper.html" class="no-external">Ford Maverick Soft Topper installation</a>
</h3>
<div class="listing-subtitle">
<a href="./posts/maverick soft topper.html" class="no-external"></a>
</div>
</div>
<div class="metadata">
<a href="./posts/maverick soft topper.html" class="no-external">
<div class="listing-date">
May 6, 2023
</div>
<div class="listing-author">
Lisa
</div>
<div class="listing-reading-time">
1 min
</div>
</a>
</div>
</div>
<div class="quarto-post image-right" data-index="7" data-categories="datascience" data-listing-date-sort="1663567200000" data-listing-file-modified-sort="1696525704498" data-listing-date-modified-sort="NaN" data-listing-reading-time-sort="4" data-listing-word-count-sort="793">
<div class="thumbnail">
<p><a href="./posts/chatbot.html" class="no-external"></a></p><a href="./posts/chatbot.html" class="no-external">
<p><img src="https://questionable.quarto.pub/posts/posts/img/Plantey_saturated.jpg" class="thumbnail-image"></p>
</a><p><a href="./posts/chatbot.html" class="no-external"></a></p>
</div>
<div class="body">
<h3 class="no-anchor listing-title">
<a href="./posts/chatbot.html" class="no-external">Chatbot</a>
</h3>
<div class="listing-subtitle">
<a href="./posts/chatbot.html" class="no-external"></a>
</div>
</div>
<div class="metadata">
<a href="./posts/chatbot.html" class="no-external">
<div class="listing-date">
Sep 19, 2022
</div>
<div class="listing-author">
Lisa
</div>
<div class="listing-reading-time">
4 min
</div>
</a>
</div>
</div>
<div class="quarto-post image-right" data-index="8" data-categories="datascience" data-listing-date-sort="1659592800000" data-listing-file-modified-sort="1713566949143" data-listing-date-modified-sort="NaN" data-listing-reading-time-sort="1" data-listing-word-count-sort="177">
<div class="thumbnail">
<p><a href="./posts/ojs_lyme.html" class="no-external"></a></p><a href="./posts/ojs_lyme.html" class="no-external">
<p><img src="https://questionable.quarto.pub/posts/posts/img/ojs_bar_chart.JPG" class="thumbnail-image"></p>
</a><p><a href="./posts/ojs_lyme.html" class="no-external"></a></p>
</div>
<div class="body">
<h3 class="no-anchor listing-title">
<a href="./posts/ojs_lyme.html" class="no-external">Observable JS for snappy datascience</a>
</h3>
<div class="listing-subtitle">
<a href="./posts/ojs_lyme.html" class="no-external"></a>
</div>
</div>
<div class="metadata">
<a href="./posts/ojs_lyme.html" class="no-external">
<div class="listing-date">
Aug 4, 2022
</div>
<div class="listing-author">
Lisa
</div>
<div class="listing-reading-time">
1 min
</div>
</a>
</div>
</div>
<div class="quarto-post image-right" data-index="9" data-categories="art" data-listing-date-sort="1659506400000" data-listing-file-modified-sort="1713566777906" data-listing-date-modified-sort="NaN" data-listing-reading-time-sort="2" data-listing-word-count-sort="285">
<div class="thumbnail">
<p><a href="./posts/ai_art.html" class="no-external"></a></p><a href="./posts/ai_art.html" class="no-external">
<p><img src="https://questionable.quarto.pub/posts/posts/img/starryai/placeholder.png" class="thumbnail-image"></p>
</a><p><a href="./posts/ai_art.html" class="no-external"></a></p>
</div>
<div class="body">
<h3 class="no-anchor listing-title">
<a href="./posts/ai_art.html" class="no-external">AI generated art</a>
</h3>
<div class="listing-subtitle">
<a href="./posts/ai_art.html" class="no-external"></a>
</div>
</div>
<div class="metadata">
<a href="./posts/ai_art.html" class="no-external">
<div class="listing-date">
Aug 3, 2022
</div>
<div class="listing-author">
Lisa
</div>
<div class="listing-reading-time">
2 min
</div>
</a>
</div>
</div>
<div class="quarto-post image-right" data-index="10" data-categories="datascience" data-listing-date-sort="1658988000000" data-listing-file-modified-sort="1713566609782" data-listing-date-modified-sort="NaN" data-listing-reading-time-sort="1" data-listing-word-count-sort="108">
<div class="thumbnail">
<p><a href="./posts/quarto.html" class="no-external"></a></p><a href="./posts/quarto.html" class="no-external">
<p><img src="https://questionable.quarto.pub/posts/posts/img/welcome.jpg" class="thumbnail-image"></p>
</a><p><a href="./posts/quarto.html" class="no-external"></a></p>
</div>
<div class="body">
<h3 class="no-anchor listing-title">
<a href="./posts/quarto.html" class="no-external">What is Quarto?</a>
</h3>
<div class="listing-subtitle">
<a href="./posts/quarto.html" class="no-external"></a>
</div>
</div>
<div class="metadata">
<a href="./posts/quarto.html" class="no-external">
<div class="listing-date">
Jul 28, 2022
</div>
<div class="listing-reading-time">
1 min
</div>
</a>
</div>
</div>
<div class="quarto-post image-right" data-index="11" data-categories="datascience,dice,games" data-listing-date-sort="1617516000000" data-listing-file-modified-sort="1696535148724" data-listing-date-modified-sort="NaN" data-listing-reading-time-sort="12" data-listing-word-count-sort="2208">
<div class="thumbnail">
<p><a href="./posts/resin.html" class="no-external"></a></p><a href="./posts/resin.html" class="no-external">
<p><img src="https://questionable.quarto.pub/posts/posts/img/resin/PXL_20201008_180539533.MP.jpg" class="thumbnail-image"></p>
</a><p><a href="./posts/resin.html" class="no-external"></a></p>
</div>
<div class="body">
<h3 class="no-anchor listing-title">
<a href="./posts/resin.html" class="no-external">Resin Dice</a>
</h3>
<div class="listing-subtitle">
<a href="./posts/resin.html" class="no-external"></a>
</div>
</div>
<div class="metadata">
<a href="./posts/resin.html" class="no-external">
<div class="listing-date">
Apr 4, 2021
</div>
<div class="listing-author">
Lisa
</div>
<div class="listing-reading-time">
12 min
</div>
</a>
</div>
</div>
<div class="quarto-post image-right" data-index="12" data-categories="datascience" data-listing-date-sort="1609743600000" data-listing-file-modified-sort="1696530405442" data-listing-date-modified-sort="NaN" data-listing-reading-time-sort="9" data-listing-word-count-sort="1629">
<div class="thumbnail">
<p><a href="./posts/battlebots 2021.html" class="no-external"></a></p><a href="./posts/battlebots 2021.html" class="no-external">
<p><img src="https://questionable.quarto.pub/posts/posts/img/bb/BB.jpg" class="thumbnail-image"></p>
</a><p><a href="./posts/battlebots 2021.html" class="no-external"></a></p>
</div>
<div class="body">
<h3 class="no-anchor listing-title">
<a href="./posts/battlebots 2021.html" class="no-external">BATTLEBOTS 2021</a>
</h3>
<div class="listing-subtitle">
<a href="./posts/battlebots 2021.html" class="no-external"></a>
</div>
</div>
<div class="metadata">
<a href="./posts/battlebots 2021.html" class="no-external">
<div class="listing-date">
Jan 4, 2021
</div>
<div class="listing-author">
Lisa
</div>
<div class="listing-reading-time">
9 min
</div>
</a>
</div>
</div>
</div>
<div class="listing-no-matching d-none">
No matching items
</div>
</div> ]]></description>
  <guid>https://questionable.quarto.pub/posts/</guid>
  <pubDate>Sat, 05 Jul 2025 23:28:02 GMT</pubDate>
</item>
<item>
  <title>Blog posts and random musings</title>
  <link>https://questionable.quarto.pub/posts/posts.html</link>
  <description><![CDATA[ 





<p>Here’s some random thoughts, all brought to you by Quarto’s blogging capability.</p>




<div class="quarto-listing quarto-listing-container-default" id="listing-listing">
<div class="list quarto-listing-default">
<div class="quarto-post image-right" data-index="0" data-categories="code,games" data-listing-date-sort="1751695200000" data-listing-file-modified-sort="1751755106844" data-listing-date-modified-sort="NaN" data-listing-reading-time-sort="1" data-listing-word-count-sort="58">
<div class="thumbnail">
<p><a href="./posts/bus-jump.html" class="no-external"></a></p><a href="./posts/bus-jump.html" class="no-external">
<p><img src="https://questionable.quarto.pub/posts/posts/img/bus-jump.png" class="thumbnail-image"></p>
</a><p><a href="./posts/bus-jump.html" class="no-external"></a></p>
</div>
<div class="body">
<h3 class="no-anchor listing-title">
<a href="./posts/bus-jump.html" class="no-external">Using LLM’s to make a jump game</a>
</h3>
<div class="listing-subtitle">
<a href="./posts/bus-jump.html" class="no-external"></a>
</div>
</div>
<div class="metadata">
<a href="./posts/bus-jump.html" class="no-external">
<div class="listing-date">
Jul 5, 2025
</div>
<div class="listing-author">
Lisa
</div>
<div class="listing-reading-time">
1 min
</div>
</a>
</div>
</div>
<div class="quarto-post image-right" data-index="1" data-categories="code,dice,games" data-listing-date-sort="1751695200000" data-listing-file-modified-sort="1751754758896" data-listing-date-modified-sort="NaN" data-listing-reading-time-sort="9" data-listing-word-count-sort="1740">
<div class="thumbnail">
<p><a href="./posts/dice-roller.html" class="no-external"></a></p><a href="./posts/dice-roller.html" class="no-external">
<p><img src="https://questionable.quarto.pub/posts/posts/img/dice-roller.png" class="thumbnail-image"></p>
</a><p><a href="./posts/dice-roller.html" class="no-external"></a></p>
</div>
<div class="body">
<h3 class="no-anchor listing-title">
<a href="./posts/dice-roller.html" class="no-external">Using LLM’s to make a dice roller</a>
</h3>
<div class="listing-subtitle">
<a href="./posts/dice-roller.html" class="no-external"></a>
</div>
</div>
<div class="metadata">
<a href="./posts/dice-roller.html" class="no-external">
<div class="listing-date">
Jul 5, 2025
</div>
<div class="listing-author">
Lisa
</div>
<div class="listing-reading-time">
9 min
</div>
</a>
</div>
</div>
<div class="quarto-post image-right" data-index="2" data-categories="code,games" data-listing-date-sort="1751695200000" data-listing-file-modified-sort="1751757981614" data-listing-date-modified-sort="NaN" data-listing-reading-time-sort="2" data-listing-word-count-sort="373">
<div class="thumbnail">
<p><a href="./posts/text-adventure-space.html" class="no-external"></a></p><a href="./posts/text-adventure-space.html" class="no-external">
<p><img src="https://questionable.quarto.pub/posts/posts/img/text-adventure-space.png" class="thumbnail-image"></p>
</a><p><a href="./posts/text-adventure-space.html" class="no-external"></a></p>
</div>
<div class="body">
<h3 class="no-anchor listing-title">
<a href="./posts/text-adventure-space.html" class="no-external">Using LLM’s to make a text adventure</a>
</h3>
<div class="listing-subtitle">
<a href="./posts/text-adventure-space.html" class="no-external"></a>
</div>
</div>
<div class="metadata">
<a href="./posts/text-adventure-space.html" class="no-external">
<div class="listing-date">
Jul 5, 2025
</div>
<div class="listing-author">
Lisa
</div>
<div class="listing-reading-time">
2 min
</div>
</a>
</div>
</div>
<div class="quarto-post image-right" data-index="3" data-categories="hardware,code" data-listing-date-sort="1714543200000" data-listing-file-modified-sort="1714582297527" data-listing-date-modified-sort="NaN" data-listing-reading-time-sort="2" data-listing-word-count-sort="317">
<div class="thumbnail">
<p><a href="./posts/kettle automation.html" class="no-external"></a></p><a href="./posts/kettle automation.html" class="no-external">
<p><img src="https://questionable.quarto.pub/posts/posts/img/home-automation.png" class="thumbnail-image"></p>
</a><p><a href="./posts/kettle automation.html" class="no-external"></a></p>
</div>
<div class="body">
<h3 class="no-anchor listing-title">
<a href="./posts/kettle automation.html" class="no-external">Hey Google - make me coffee!</a>
</h3>
<div class="listing-subtitle">
<a href="./posts/kettle automation.html" class="no-external"></a>
</div>
</div>
<div class="metadata">
<a href="./posts/kettle automation.html" class="no-external">
<div class="listing-date">
May 1, 2024
</div>
<div class="listing-author">
Lisa
</div>
<div class="listing-reading-time">
2 min
</div>
</a>
</div>
</div>
<div class="quarto-post image-right" data-index="4" data-categories="laser-cutting,maverick-mods" data-listing-date-sort="1696485600000" data-listing-file-modified-sort="1696530583355" data-listing-date-modified-sort="NaN" data-listing-reading-time-sort="2" data-listing-word-count-sort="202">
<div class="thumbnail">
<p><a href="./posts/maverick cubby holder.html" class="no-external"></a></p><a href="./posts/maverick cubby holder.html" class="no-external">
<p><img src="https://questionable.quarto.pub/posts/posts/img/cubby-holder.jpg" class="thumbnail-image"></p>
</a><p><a href="./posts/maverick cubby holder.html" class="no-external"></a></p>
</div>
<div class="body">
<h3 class="no-anchor listing-title">
<a href="./posts/maverick cubby holder.html" class="no-external">Ford Maverick Truck Cubby Holder</a>
</h3>
<div class="listing-subtitle">
<a href="./posts/maverick cubby holder.html" class="no-external"></a>
</div>
</div>
<div class="metadata">
<a href="./posts/maverick cubby holder.html" class="no-external">
<div class="listing-date">
Oct 5, 2023
</div>
<div class="listing-author">
Lisa
</div>
<div class="listing-reading-time">
2 min
</div>
</a>
</div>
</div>
<div class="quarto-post image-right" data-index="5" data-categories="rockets" data-listing-date-sort="1691301600000" data-listing-file-modified-sort="1713567053274" data-listing-date-modified-sort="NaN" data-listing-reading-time-sort="1" data-listing-word-count-sort="69">
<div class="thumbnail">
<p><a href="./posts/vortico rockets.html" class="no-external"></a></p><a href="./posts/vortico rockets.html" class="no-external">
<p><img src="https://questionable.quarto.pub/posts/posts/img/vortico.jpg" class="thumbnail-image"></p>
</a><p><a href="./posts/vortico rockets.html" class="no-external"></a></p>
</div>
<div class="body">
<h3 class="no-anchor listing-title">
<a href="./posts/vortico rockets.html" class="no-external">Vortico rockets</a>
</h3>
<div class="listing-subtitle">
<a href="./posts/vortico rockets.html" class="no-external"></a>
</div>
</div>
<div class="metadata">
<a href="./posts/vortico rockets.html" class="no-external">
<div class="listing-date">
Aug 6, 2023
</div>
<div class="listing-author">
Lisa
</div>
<div class="listing-reading-time">
1 min
</div>
</a>
</div>
</div>
<div class="quarto-post image-right" data-index="6" data-categories="maverick-mods" data-listing-date-sort="1683352800000" data-listing-file-modified-sort="1713566902522" data-listing-date-modified-sort="NaN" data-listing-reading-time-sort="1" data-listing-word-count-sort="78">
<div class="thumbnail">
<p><a href="./posts/maverick soft topper.html" class="no-external"></a></p><a href="./posts/maverick soft topper.html" class="no-external">
<p><img src="https://questionable.quarto.pub/posts/posts/img/maverick_softtopper 3.jpg" class="thumbnail-image"></p>
</a><p><a href="./posts/maverick soft topper.html" class="no-external"></a></p>
</div>
<div class="body">
<h3 class="no-anchor listing-title">
<a href="./posts/maverick soft topper.html" class="no-external">Ford Maverick Soft Topper installation</a>
</h3>
<div class="listing-subtitle">
<a href="./posts/maverick soft topper.html" class="no-external"></a>
</div>
</div>
<div class="metadata">
<a href="./posts/maverick soft topper.html" class="no-external">
<div class="listing-date">
May 6, 2023
</div>
<div class="listing-author">
Lisa
</div>
<div class="listing-reading-time">
1 min
</div>
</a>
</div>
</div>
<div class="quarto-post image-right" data-index="7" data-categories="datascience" data-listing-date-sort="1663567200000" data-listing-file-modified-sort="1696525704498" data-listing-date-modified-sort="NaN" data-listing-reading-time-sort="4" data-listing-word-count-sort="793">
<div class="thumbnail">
<p><a href="./posts/chatbot.html" class="no-external"></a></p><a href="./posts/chatbot.html" class="no-external">
<p><img src="https://questionable.quarto.pub/posts/posts/img/Plantey_saturated.jpg" class="thumbnail-image"></p>
</a><p><a href="./posts/chatbot.html" class="no-external"></a></p>
</div>
<div class="body">
<h3 class="no-anchor listing-title">
<a href="./posts/chatbot.html" class="no-external">Chatbot</a>
</h3>
<div class="listing-subtitle">
<a href="./posts/chatbot.html" class="no-external"></a>
</div>
</div>
<div class="metadata">
<a href="./posts/chatbot.html" class="no-external">
<div class="listing-date">
Sep 19, 2022
</div>
<div class="listing-author">
Lisa
</div>
<div class="listing-reading-time">
4 min
</div>
</a>
</div>
</div>
<div class="quarto-post image-right" data-index="8" data-categories="datascience" data-listing-date-sort="1659592800000" data-listing-file-modified-sort="1713566949143" data-listing-date-modified-sort="NaN" data-listing-reading-time-sort="1" data-listing-word-count-sort="177">
<div class="thumbnail">
<p><a href="./posts/ojs_lyme.html" class="no-external"></a></p><a href="./posts/ojs_lyme.html" class="no-external">
<p><img src="https://questionable.quarto.pub/posts/posts/img/ojs_bar_chart.JPG" class="thumbnail-image"></p>
</a><p><a href="./posts/ojs_lyme.html" class="no-external"></a></p>
</div>
<div class="body">
<h3 class="no-anchor listing-title">
<a href="./posts/ojs_lyme.html" class="no-external">Observable JS for snappy datascience</a>
</h3>
<div class="listing-subtitle">
<a href="./posts/ojs_lyme.html" class="no-external"></a>
</div>
</div>
<div class="metadata">
<a href="./posts/ojs_lyme.html" class="no-external">
<div class="listing-date">
Aug 4, 2022
</div>
<div class="listing-author">
Lisa
</div>
<div class="listing-reading-time">
1 min
</div>
</a>
</div>
</div>
<div class="quarto-post image-right" data-index="9" data-categories="art" data-listing-date-sort="1659506400000" data-listing-file-modified-sort="1713566777906" data-listing-date-modified-sort="NaN" data-listing-reading-time-sort="2" data-listing-word-count-sort="285">
<div class="thumbnail">
<p><a href="./posts/ai_art.html" class="no-external"></a></p><a href="./posts/ai_art.html" class="no-external">
<p><img src="https://questionable.quarto.pub/posts/posts/img/starryai/placeholder.png" class="thumbnail-image"></p>
</a><p><a href="./posts/ai_art.html" class="no-external"></a></p>
</div>
<div class="body">
<h3 class="no-anchor listing-title">
<a href="./posts/ai_art.html" class="no-external">AI generated art</a>
</h3>
<div class="listing-subtitle">
<a href="./posts/ai_art.html" class="no-external"></a>
</div>
</div>
<div class="metadata">
<a href="./posts/ai_art.html" class="no-external">
<div class="listing-date">
Aug 3, 2022
</div>
<div class="listing-author">
Lisa
</div>
<div class="listing-reading-time">
2 min
</div>
</a>
</div>
</div>
<div class="quarto-post image-right" data-index="10" data-categories="datascience" data-listing-date-sort="1658988000000" data-listing-file-modified-sort="1713566609782" data-listing-date-modified-sort="NaN" data-listing-reading-time-sort="1" data-listing-word-count-sort="108">
<div class="thumbnail">
<p><a href="./posts/quarto.html" class="no-external"></a></p><a href="./posts/quarto.html" class="no-external">
<p><img src="https://questionable.quarto.pub/posts/posts/img/welcome.jpg" class="thumbnail-image"></p>
</a><p><a href="./posts/quarto.html" class="no-external"></a></p>
</div>
<div class="body">
<h3 class="no-anchor listing-title">
<a href="./posts/quarto.html" class="no-external">What is Quarto?</a>
</h3>
<div class="listing-subtitle">
<a href="./posts/quarto.html" class="no-external"></a>
</div>
</div>
<div class="metadata">
<a href="./posts/quarto.html" class="no-external">
<div class="listing-date">
Jul 28, 2022
</div>
<div class="listing-reading-time">
1 min
</div>
</a>
</div>
</div>
<div class="quarto-post image-right" data-index="11" data-categories="datascience,dice,games" data-listing-date-sort="1617516000000" data-listing-file-modified-sort="1696535148724" data-listing-date-modified-sort="NaN" data-listing-reading-time-sort="12" data-listing-word-count-sort="2208">
<div class="thumbnail">
<p><a href="./posts/resin.html" class="no-external"></a></p><a href="./posts/resin.html" class="no-external">
<p><img src="https://questionable.quarto.pub/posts/posts/img/resin/PXL_20201008_180539533.MP.jpg" class="thumbnail-image"></p>
</a><p><a href="./posts/resin.html" class="no-external"></a></p>
</div>
<div class="body">
<h3 class="no-anchor listing-title">
<a href="./posts/resin.html" class="no-external">Resin Dice</a>
</h3>
<div class="listing-subtitle">
<a href="./posts/resin.html" class="no-external"></a>
</div>
</div>
<div class="metadata">
<a href="./posts/resin.html" class="no-external">
<div class="listing-date">
Apr 4, 2021
</div>
<div class="listing-author">
Lisa
</div>
<div class="listing-reading-time">
12 min
</div>
</a>
</div>
</div>
<div class="quarto-post image-right" data-index="12" data-categories="datascience" data-listing-date-sort="1609743600000" data-listing-file-modified-sort="1696530405442" data-listing-date-modified-sort="NaN" data-listing-reading-time-sort="9" data-listing-word-count-sort="1629">
<div class="thumbnail">
<p><a href="./posts/battlebots 2021.html" class="no-external"></a></p><a href="./posts/battlebots 2021.html" class="no-external">
<p><img src="https://questionable.quarto.pub/posts/posts/img/bb/BB.jpg" class="thumbnail-image"></p>
</a><p><a href="./posts/battlebots 2021.html" class="no-external"></a></p>
</div>
<div class="body">
<h3 class="no-anchor listing-title">
<a href="./posts/battlebots 2021.html" class="no-external">BATTLEBOTS 2021</a>
</h3>
<div class="listing-subtitle">
<a href="./posts/battlebots 2021.html" class="no-external"></a>
</div>
</div>
<div class="metadata">
<a href="./posts/battlebots 2021.html" class="no-external">
<div class="listing-date">
Jan 4, 2021
</div>
<div class="listing-author">
Lisa
</div>
<div class="listing-reading-time">
9 min
</div>
</a>
</div>
</div>
</div>
<div class="listing-no-matching d-none">
No matching items
</div>
</div> ]]></description>
  <guid>https://questionable.quarto.pub/posts/posts.html</guid>
  <pubDate>Sat, 05 Jul 2025 23:28:02 GMT</pubDate>
</item>
<item>
  <title>About</title>
  <link>https://questionable.quarto.pub/posts/about.html</link>
  <description><![CDATA[ 
<p>Welcome!</p>
<p>I’m a former product engineer with experience in biotech, semiconductor, and MEMS/BioMEMS manufacturing that stumbled into computational shenanigans in my journey of trying to make the most out of the data available to my team. I was fortunate enough to set up a RStudio / Posit Connect server at a previous company and from then on was hooked on helping folks set up infrastructure for doing good data science.</p>
<p>In my spare time I enjoy playing board games at the local game shop, building things, hot chocolate, and talking about anything SciFi.</p>
<p><a href="https://github.com/leesahanders/Anders_Resume/blob/main/Anders_2022.pdf" class="download" title="Download Resume">Resume</a></p>


 ]]></description>
  <guid>https://questionable.quarto.pub/posts/about.html</guid>
  <pubDate>Sat, 05 Jul 2025 23:28:02 GMT</pubDate>
  <media:content url="https://questionable.quarto.pub/posts/images/Rocinante.jpg" medium="image" type="image/jpeg"/>
</item>
</channel>
</rss>
